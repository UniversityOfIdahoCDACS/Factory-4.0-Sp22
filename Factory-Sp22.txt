// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\Jacob\Documents\GitHub\Factory-4.0-Sp22\Factory-Sp22.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
6998189506afdfe6140ed372017386711f12f4bd78d56ae2ef198a582b69f9eca82f82ab48abeeb0
3c8571a55aa311ccdf6ef28eedf1408d640f4e1cb9f10f8fc2b5d5b32a65d8aaf09a9a21856b2172
de1a8ad3d12a4300a89e3c1b1d9e55c00d052aee2aebcff431e69d06a5972913eabdc8961dd118f8
563a1168b8cf4e056795b79c2931d12a06f05fbba68d92c6b343f202348d5b529758724390de7520
1b101e74d408977bd33e840a8d17f2c6b052a2a46a50cc08ef331b2c40fac0ca1178fe1b745a2591
f7c1ea4cdbcde5d38b954f4fb47e3b078324631d2ab74167a3d03e1613854deb424a0bf40bf541aa
748fd84709b82cfbb2da926fa322f5cd15abd6a4f6644a241d65663177eafb78cc8ad7396e95db45
0ee8251f7b71ef52132e70f5f140399cd8f8dc7c2dca30064e33fc30695e873414ee8a3e6047ccdd
c150285e81424811b3c6e112dfc782859d09c33215b657dc444e7a5f7e685b40f42cd0d281629f1c
491645dd8176d9fa14d887b6649a9d821eab85c6e468249e7a3d0b35d010e75cb60e1879b4e7a0d2
19e9f1010a74de9f8df02b79bb212fdc37b3efeedfeadad4e946b25ea2309d9af465ca239f61f417
617a070e784357d91a2db64a7f720b2300ad068bcaa72e193401498a4c347df2cec4a0cf19817abf
be90913fb0726516a320c32988f8eab33a52a7bbf114e6b31579a76fb12708e696a4bbe4a7aa36b3
3b17d29cdc9c921741b666a643ef35888c38d6016d52f0acafee93587d3fb76dadbb193c53207037
6e75314f498357eeefa6ae0bbdc19e05bd7efd86b84cd12381e7390fc3037ed3dbc669c36f5718d8
c336f97705bb8dea59505c7dd1066521a76a077631cae1b962e64c0d0ca89fb84dce479b865cfa76
472f0215ff397046773674647c55abb5cb0e96ad49721cc03c37486aeb8b04149bcd117cc325fd41
e0370a01b0ffcd1696b007d11c3bf9df5d02a9afd5aeb312b46979246ca11edddba3c0d9a90f0e73
3a64ed6882aa5ac2ae722b8a26c068e483128b7d84595896487a98355825c1543595094ddf223be8
c1a6e92b3b4e9bae0a8179ec00f3e6bc57ec5fbbe27a305d32d21202eb602a40b592d3259f048c86
29f3952d5cfdcc85c8e7078a4db7927d4d925ecfec7a3e2357006e5bb78945eec61fcd97d8456cbf
b888fde80ba037e2d51e475cf8a1712e87bd95bf3222456cb9a266deace7253307e90a00f9a3cbee
b0e60dd669604a9e7a9d0722b6e155f0ed0a8e8489b48daa09eb2e817a4561904d5f14b6f7c7d88c
52fcc3ca515a37b4ecb3249c3702057c3d9ed5e3bb887f370b274b98ae0315606d0d3bbaf4878efc
36e1b9772e2fa9fa4357183e7e03dc8c7fa60a7bcb6d9fe8faca3546e17d54c17ca8a45e370d6973
1e77611e3e58b5992369b2c27027d0c544775d151d056869533f3796f3223487267db03318d6c82f
0b7cafe4e360c2bcd3353152ed21bae5d71fb2b910a936d50d6aeba553ade7a16eb5a194cc1d93b2
921606eb7e3f8421880287e66a8b5618fbe49af168e875cbf53966eb07d2c784dc50f08c475028b9
7e58a723531e712e4e0ba612919eb3bddda743794f47a63ba600403179890e1a396cce14466e9878
1cfc68f9754668fd8eff1e026f472ae9a96e6d471c188e6cdd81720091c846dc2ba68e958a2eeb01
a8b5901d25afc1e48c843d288fec5adc80e86e7b6dff8267c34862c2ceafeced247895e2385e45aa
f29de8186b075632052783eaac0b717c28817973007e786c212b520152872573895a5414edd27b37
889e42f60a8a50d71885b5f77f9ce4055be8c9538061fbed3185f97ba126e9744406d284f6fe813a
02539146ab5b3034a60e6c7f470a849159892bbd5b80aec6ac817e6851a4667069e7c696d74822a2
876601381c330881c7e78c718f56d0019707447337adb1ea065a2c532d76c4b244008785fcb727f2
d22a19657ede1bf6e03ae8375c8c6326bf97d9d965b10fa66b29880e444d3aee89be20d1775254e3
fc860a589ebbddc96b299f68ff7ec71ca361d9ee8432eb6c18506b2da50abf28bff1dc2a9f1f47f4
b54f8deb16cc177e7d8fde988d14ca109f8167baffdeb7081b3a5cbc6b9e8342e971137954baef8d
b144b1611fdc79d6fb366a2775d26246234f1696ee19de42a91eb72e156fd5560399111bbed4b599
00ba2ea47ffd9c0094f697cc810831a8429ca3d7582442ff01fb403047b556cab9ce08fac1eb8110
0f2eefcbb17e5227a842dce39679a0c67b8775ce7507f506daa9de1eec3764d6f571c18c3ed11137
1a47a2d22c1a4837f40513cf27f2f3ec0debcc0fd213c42f759073cc912b460093305dd9a12fe042
7c6000dfcdd8ce439ed052689d7adf30e028c5e3daecc6c2e6d1730247ba30ff0157aa4ceb738a74
ab78c81ffd9918743f33dae6bf748cde492f8d7702b03bd9994b976ccd02ad21c08e0a86d18598a2
f0ff83359b523d272aadd750dd8dca773956c8427e2bad8165c5a999251eda80a8d7a0a68f5c0b48
e819af31835e0c8bc049c036a08a8428856ad0d05cad99f81d875db18c4b26bc95b69cb88ffc0ff6
5daefc09cf31bd6a50fe0d47b444549a61844b2bc225b3e23442b041609e2ea71cf7042a46631621
a1c266869c5b9d30bd3c995c2fff31450da7e31d450379fc3f22510780450bd5067711b4745c89e5
8d0b5c2e760fb4e9e1e415149b894c85313ce93f7267a32cbe65a3c96c143ddcae852a3f61d504c5
2bf06e9f4aca281e5a9ec55dccf2c696840fa000c96ea99a612551f17178fa89d489d019aea89eb0
1ba5679ca0e239a980d5f48f9fa3fb2ac327ec0a71ba2da4e5b1580d8140c31b0e4c2f85fe5a6b74
74527c4ba41b4f4bec5119b3183ca56b5baba37986ae7eeba633008e290dd40bcfca95cd91aa100b
8c31f1864f457f6ede14d546ee8be8cf1ea7b157f46823ee4ef15ecd2a84cb05def6d63b933082d2
61de1e46bbaa80af14d49cf4bfedd29e582368361ef4f52538e156b296d4bd0a7a7c570f3e776792
3494f67cdce8ca0143c309ac1e6591a921966dfcb3c585e576a5eb8f945f7f3b4dc15817e3ce4e07
353fcd214c8292d5bdd077f52bf61abfaba183db0c58030b33d3f9687f6e93458709e24207f2b26e
d455c96d40caa792a1b9e7c6d58d7617f6eb091c435a4f2e41276d1498ebb792eebd63e2417d5d06
9d17248dc371086787ea9291f0a756f607de12951c0a13b38ef1447a74a8e19ae40688bdfe53aa35
01014efd37c55178465345763b7307ba623c9f3a692fc99c75f80e1bc0613cd872900154967f8c78
7caa7e1741ec9e348d72691d944a899ab2724950f0cd4aea3427ddde063ee27b8acd2d136dd2fe2d
52382de5edc381aeba688040c50def535aa471a5b21bdc69f690e1833ee80e4e6f6739ea8fcffae7
fb9b46305ac79a8903536f25dd89e10b9259df9e64a660b42e8740f56a7485d105a0edd748c32b99
56fce0136598e5d8fd5675b1057039075071b8d58a3c908cb271b84065eb1d5c839195ad84d7cd35
909dc07db66004449e3e61bc5a4dddc235c688fbbaca944449439c053abe1fa1ca28e5523c69174c
185fb14d1ed11830c171a6700c0089611c8e2c56083f7ddc8356ce8c09210fe7b7525f51dabc2edd
07ac2726016c690bcca7d554ce53f80c20b6366c2cbe9d36779d4142f4fd71dc04254c3a8ae18d92
df2a03e0a9255a0f65e758830368ceff7b3c1d24c8cd1d526584cde19270cdbaf1d42d2d70e229ff
9b057f5e03de385fcc9eeae2c3f72804ed6f73964ebf9b4b373b52b552a958577a112327d1fbcfe1
69168fce24f8bfa96b95adc5c46c2a5946e05f8446fd49b8b79ad1e3b3a1a1f41b1f911d0be8bfbe
b0cdf226b9a6ea60a0235b2b3aec57c19673b8d9ebbf7b04076ee80039d1816479777852152b9cb5
58c30fdbb97e9bfce5ee2ec9d4965f4d4d18b7b26cd59642223ededbf946880c15e25239554a0673
5ab9f07c07922cfa989f7fac1dbfc59bdb49346abf27c546a35ca010ee3216a7b5a21656d1bd5cd7
afdfce0c67f5eeded850230490104aca4c3309bdc881bfe9983cfbcad270ece474c8439db3c6cdc6
06e1cc8e8d39d360b9fc717fbecaf416c5d1bae9a0cb67cfb323083d66e85011e08fd0293dafbc7c
cd46baed269086b4485baf94ffd6fec897bec7c4ade1547be8489fee81565abf8d629f3391963501
3037818264c95742cc3cd026ef34bb0863adbcfc0ad26913b03da76f1a9d84722b6318b6e0d66f8a
a36b634d0f32e17e9d55e3b08371a1d52ea18d4e8475257c1099dddfda8c14d65028899f7e292826
4fdebb9f3f40e31578706a96737f8c46df6c7b9f35c806f18cb8aa7e545d6c58807c2d011ceed0a4
2d786782222e2759468f791d7da70f1d7f931b333ece8a2e041173f49f3120909646b65ab538da6a
8b980c5ffe6de01ae6c7c7246fe39441b820efd5f2fa84b57c8aeea63d8efa7765bedf58e964e939
74ef5706df3deab821ad1f7cd25098a20eaf86cb491991423665166fbc56525e7d2b159ce1b24aca
7ddc4e16ea681dff01d8b91fdcc91e8203072903c9cabe8c0179b23ca018e9e82cf0144a667621bc
2a351cad6ed4f033e7b1dbea44193eaea973a4c367d940b98c6926b452d42bdcd87c98c381664b36
1fce6de057a06a0266507a55d91ea84d7c4a40735e63b3b74295efec547f1b2dc773b273b0ada6dd
42778f08d3437a12be06cb776b1e8b07f46e0b809077b893c887f54fb2349bf932f906264cc74fc1
3d4d045772f6932adc3b74a970be77bc43637f18ae183c857265ba574b4fcd8a5317b1edf7f6d21a
f6a79de0094e91c18e958003a77aef65c99afbf00d5c24c9b19d764078a699316bdf6312e9d9c03e
61c92ac0e993ccbd355aa54cfd62fd6f30db2ae97429d936e07e5b2a75040c87cbb1edc49fe2e1ae
7c8c4177e153f71d344f1061e9867990623fb7828462174422317ab086194cd1f6c87654a392356f
3db84005c7c3e8913877a0f0ad8fa410e909ec0a6942eb024becaeb9acf3477631107cd9b378580b
ecc3c8a6100d62eb55584636dd0857836228d85397573fe27850590faffdc4da99875a947aeec8e8
df62c96ea06bc530444ad83097c8fbabf9e82ba039a3901dc5b753db482cb8003e3333f230034919
3ab0cfba7aec459e77079dd16ac128baed16c744b8bf1e76a8f2c949525663ab359d02ab6939ffc4
97b719abb6e229a219735adfdf470f54a3ff25c573045817ef3650445074209f308af6a4ec95a42c
92b8b87e6228f1a15809994649a8a0ecb06ecc73616a1d706416ea8482ce5927e51a78383b1f2691
cfb63a20a00eacaafb325eb3b8417fc7ec0eb20c60329ef53e120b43f660eea1ca07d4b81f251cd3
c912c09426bb04b053937744e03718022cb87b3a818aa3b4c80d2cabc8a27789e398a41acc02f7cb
b24a16afbf201e8b8e4d32181954844cd37f25688a4c9b4ba23a0a281f7be62f4e9625bf6f64e59c
a09df310c1805da0991861be42ac0f2dbdfdaca7ebcc39eecacc38db84e3a63556ff06da00572b3a
aaa8c1a50f7026f1035f96ad8654cbfcac1d5f01f1061d93e19c4a98449ef935f0f0797c8a9a0e28
34650b335fda140c646a678afcb989273f65f339bab9f1ee977b160ebeef118839ba5aa20dc82131
bf2a481f862b3459b891fd715e6f72094403c0b85cd2a6dee9590edb2af3c89adfce009806f43f9b
e2ba7ce8928c3e954ed553129a8ae37bc2f6f07fc432f73596f6681efb1743f352c9401e0b066c8f
9f49286327894bceae61c72f42fc23acfcc91b9ebbcb7b89c3c606b94702c58ea179224b8a5ec9af
b66f7ab2f895820e37047cc2af05a73abff48623bd855bbe0185e0d744e90bcaad011f19ca116ab5
bd424adb44b216fdd3dddd0e12b24f1a441b19013bcd82a690059e4c1eedce29773a2988598b812c
aea5692dd647caaafdd215d77f5e284c460e19cbcaa2c407db83c0a66e6df6f113faaad182274f20
06826fa73a156ea11c2d1143829b39f777bdcc37b18337d1de8580681e08da7a9164baa96046c7c2
74404f089f7919ad23f3e4d1f7157d617025666d36c1edd7ae07b31ba3105446fd4086e041af924f
504f15a5a610fe2dc2a544ff8c726ffb8417806f685aeac0e9f7341528923d68167d0583183d8b26
07d488ca7177476b294251a479bad4fe1dbe5f32270bbdeb993fa3ec078bb38c955664650d04d8f6
c5afe15fd60422ec8c11033998dcb1840f08b00166a4ec7489d78e34b9c30eae86ee797513b45b4b
9a9034a84436219e3b0cdb249a53e0830bd1591a2cafbc31286f541045d89bad3db9f1f7221c5d8a
eba53d76b82455aa51d84d97f8d86195ed02ba8971d88f7e8d341342b341233ea01a06899ec3eb63
0863425b7b694fc292f5dc11373f6a2008a28fc45d8413ed7e581b26a894523efe7fd47a8cb16e7f
c03d6ebf0fb0f6946b0911efa34fbcf0a92df7679f096bc0a5f94006ae883efb957321508c8d0558
0d25bab6bc72dbd35c279d769202a52b0231a8d6c32c84f0a667a7bf82bbc65556cc7f71a906451d
c592b0f08b683a643376e3e802f6c18a4126d71acc46a367f2ee74b7ae262c42d88c5b50b97b37ab
3a6b94daaf85a7affa672412a3f61ae9e31a3ea38b14282013a1fc13bc1005641e7683d5943ef8e8
e8ad7316c5ae9694c2a6f908f9a4145d66fb14e60d171a29f3f905d8cb90465c1f2d8111a31ec640
658104e2d939939cd66a7939c9d929a49fca479e08888dd8bfb44d0f66c0910a5605da00c7be76fb
7077506512045c58ca6be85bf01296ded45e48f0e5ebca8e7a5d3a454645bc8aa5c662663bb58609
2080e0f64cc83db3b81c80f7c8ad7ab51a0f1781be331ddfcbf1d3f0846089e07e969895e5ae4cb0
c03a2f112a441bb9af23c4858bef4f9d01fdec6b7834d80ef19ad749f45cec7a286dde438c577976
54fb776293aceca14142b2d7ccf6886e9fc831a4f6d3030984440af4c5786c833290b6b92ea6cade
eab03bb285fa11cdb41ee7303c10a223b4d7ba1ed7f5f8980dd264057da758e0d4d628bd89a27be0
5ac99150fcd898ff38f7981d6b5237b1c3c05a315b060ed97627a0231dfb80d4b0bcd54b67029913
00903b260fdcc388f9bb02792c31e37fc36f943c55b3a6a8e982844624ed5b2c39d0ba73be01069a
36222258d5b7e7784da755f6008192521db954a2d43eef3167fc4f8b5bf9fe815217a03e065f72b9
9c5c47e36debc8b89cba0bb06dd9304ba748e15208ee9e7227b39087c4f495d34d485129c2a359f2
1f374310f1230681075497941ec5c0df6641cd6bc24bad9865d34c8e6db19e1f54907f4ac6e6d8f6
088ece6d776ed5fe1bc4f24c79475094b5a81e24e77787d525e6b59f669045e604b0336e2a82d524
fa6b0816620fee7220f07a83a0584a182db4a8c02142a7878a90634446f2ea57b6218ebac646f3d2
24a470f0f46f4f55308ea26fa4f4bc1ed3781cfaaeed002345d9c88de79c7350dc9aa203313811b5
916866d39745648873bd899e9c37e1742f7c65465facce24fc61bb3d407f51cf3b4a65fdc626fb3a
12806350bf4e9977589901ee4ecaa6eb89b9fc9f9234e64730815f84e23eba5278db205ecb17ff7b
6bb8241ff40b13622760142665f1065d91d666660164ce6c9fd6773037a5956ba20753d591baf2c8
927aef8d2ffd8d645826bd48c3be10deab3c40f8d6261eb0e6a4b1d1dc1ab938fda11ba533349deb
3d51ca5964380300973ca35fe7ac99fe9c9cd2643e86ec82e84679f6d006b4bf71826186e55720df
53e9fd9a532e4326832f6b0725bb344b71f77566a897df48e32ad0ccbbad3779bfe5340e04ea6d7f
00c1e54bb09e56284e2b76cdee8ade194e2f9264aa0dd8aa9e739b2476ec9df7eb325189b6cc7826
5a6656dd2505f5cef647272a5bec9c0fd964bc6bef91619a0980d4aebdc4f649b2c8307a4ef60531
f3f1b413f346139f733c75f395f84d0872f0cf48efbb4027466aff24a10386fb8262fb73bc5ede6f
0821c04050d8ae42872c9e7331c6a38627820c46a90bb74caaa8fdc1baeb493ad38b99a278b697d1
40aaa3ba3101baf28645ac4a6ea441ba6505743f408cd6e3567b54e1a9dfa0d0c68ac1e6eacf6892
a799f17f1ff3b1622217066f6329afb664a68ab721e70aac9c320c6f173736a711dfe29004ba7ce8
7eceddefe36220b265d933232191803a96633bac081dce170bf3778173affdd57b0336742662f4e5
a5fdbe0a45ac377196575d0ce253a83d14cf4f2045c24aceb77e9aa40648d9a5ffdeb0e22d85a6fd
11a1f665f77c7c68b481f38403965f6339331dd839164b64c2f667ed844ae38043ffaf8b758dc306
cc69097aeb90fb419c0a25a18c0ee934c2f3e020c1f12aa754d5609e884e857494a9250a09e49554
0965d459cca2f70ebe344c5a0d1c989d5dc3e9dfe0f4668383dca9dff47d865ef2aaa1e32808663b
e2b76afad6a866fc1bfca12a08ed153d28686624500bfdc852d7812fb3ed6cb11fb8c461283cf83a
05c861448d39d9fddbc74947af96a4c53b6140320589a08dedbf27d47c5480941659bb962521e5cc
04db50a125e43f1fc64a5e0c605e2c12033153eddaa41de74e193a58974cb079e241f4ab992d6454
1874a255380dd2d98cf8d7f809243fd1ddb556ddc7caf9e1df24f8625517d8ba219463a045184a70
398695457acadddbd6e067c4842f3caa1693c0db8ecd73a0ae1314c32fd647a9a6a40e1bd61ac837
00ed32b1aeb8077d8e0a71f1a421de24b69c4dfe2de6655a8d4b70c1703d46f598886fb76793c20e
c24ef70e4b8dd51fd073cf46bd94592be552ccb3ec8d83f2f09008754873ac2b08807b92ba873fe6
4be92cf3500f06f8963b91985995d37c3d156db7b4a9378b41b683af62714766d8748eb5b138ef61
a3553c10e3312130a5e62f7b6e49494a89fe675af491bc663556226489b39e745da21bf4589dd47b
1b745a3ec0b126f9e98d185550ce6b6a945f99493d7fe9ce240d4688348a164ac32289684df48ba1
c0e0924f7974f3ebe7b80f6d50c4902f7e928b334dd082a857568a076170a7f5b456b067f6eb3e5f
5680ff870b382ce32980bcf728c2585ce9ab93732c65414930664c1507505d2d9a27ad5e80d07467
cf896357d84951cb9000c98ef3d1ef1774184a1b584adf41eaf52b6db08492d86ba455643fde2209
06d650258357578c2c4e4e3a8a9c3470754091064314e9688506e451424dda1e06ecbb87ea9fb3f3
f176d8ba021573451e39903a2d2df9b3c3e7e4634fc730c57be9c41041c25eab8500d64642c761a1
e4ed359693a69ab1357c4cfe0b2b534016e33ef9763187ea6c30aba72d225a7c51c771b14ae52c71
25549c6bb9dedf1e2382cfb259db9d0514ebde039b5527af185edf5cd7ccc5f197c6896e53f35b9b
a172ffaa90ecce9a78b41b97460f098995f1c625ca83fe67f0a736583a662b82844091a062573b77
4d1af13615ead4cdff13d786c22185bed6259aa1789fcce8c0c5668994f64fca63be7314d8e72133
b60c4b03a2d281e0be865ebc73be7c5ab49f3b83b545f9093a8cecc8de303e1688d1132466ee6d2c
920f73c1e86bbda183e96e7df4cfbfc06b117692ecbbc22b252cdde2367978ba6251dad98a5e7f43
919572e1466876560e064caf9295c9f2caa5ae4ed5e1b30e07dbef4f39ed2784639759ce76d62c83
fe6083ebf6fa0db240a45616243ec94e90fb12bd1544699ebe5024c181af8f81041287abf289c848
2f8f20dff648151867e0e7903029f57569045d5190e3625612546771ab430179aa663b1b8c6f5eeb
b4cc2f85e6fdae0c03b33947af02dc67aa7385a220d4a27b9e77649c47e1b1f2014c069d40b1c155
de4c9a306f31f1d5dbf7f15cd84e37bc9f3ffbe84b42d2b9082223646204a18b29fece5f253938b3
97b77047e08409e2887a7793c928c4617988b7658f68991e79b98011281207db5a58ebc6be4f4855
2aa4c6d4741de50dbf9aede2540528b1285920af51603e7aae410c893048a4f44493e8f33dea5d95
9e91c54fcbb1954dca16ebd63449ac4a71c3e5b8f4c0f95ede452e5e5fb4e33d6872d5c282fd544b
bb38b1fa1b8d0bb729f1f9dd0c2cb7ef42a45012b65ea97d13fd21622d6dc0e9b786880373d9d30b
0d6025ce83ed6b9eb1c7d0498efa79b3fd72f55f389408df387ef67556bafe1411e818228e0a1c7a
db1ef1f895eca8b0c40a4975ce337287f37b9733ff2056e4d5878c7f3ddbc474749cbe29b88783aa
78e1a200849ccebf3e004d93b5a2cc5e7a012b187722912a44d048e3b5faaaf85028d19c950b73e3
9c21acbafdf23739a55cb0b08bab43f5c9c81c21158b9841937fafce827f4afc0918174e1a3ab848
33b0e72a25370d7c5cd716490c200392142bb2f28c5f174f398e8eba42222404ca1cef3792c6af8a
e2fcf75854d6da81bd6b413996e501be5a5152f9057be8b5ce876a41607736423e5bbabddcc6be84
5fdbed97196469c9d7bfed100cae797682805edb2551f695dc62ffec04d6d93e97a5bc2087c9f858
a4b247fb50e7c66c003193b7c3adb09f00e2593da3ac21d2bd94424079eea4685c90a5e0ca619009
b3de74ed223b9b9dcebf518b2203c94f9d5a8d9c6594f2acae6125d9b61f1e4ad3f86034f527fe5b
b77420fc30d429ab49aa8fdad40df6b0d2964ec4216acb4b756b92dcca4648617cfb00601f5dc337
967857333a8313cca411651c66a3516c9e0ef5df9a928cc5e69a9722855abe28bff8ff3e7aa40466
d7b590c60da9f3f20594f9406bd0921498d47f2ddb369967fcaef3100b9b37612e5e3453850fc19b
ba24d24dbf40504bd5a7ea416927233693dd1d343aec1d958097fb77fe08e9be4e20221ee814204b
8996d02946d7d20b29474012fabcb7547569f0798814763c20ade0e85cfe6023dbd63dc6cadd1052
686e2009df57a09217842d7d7a1a97f4f7828d6f4f9c0ce8063dafd23cad8a19aa3abeed19aba8cf
4eb2182c7f370bf74090df254b218ac8659b2c514cc9ca3cf56bbdc7533b3128ae21958d87ee1cdc
f55345104b6c028e58b95e3f21fe7e79f81af84daaaa20742712bf30d9c678b42a1143e5333e8b02
0fbcacc6f6a043c4cb5379688e76049c8a44981d56772f1f5329192a74f7da3b9bcadc78553da038
ada17c9e0fb51d750d1a9c78a5c18a00851a207420ac80fe18d3657da54f9ac4cf7c7f4625f369dd
f5267837111efa44ac795138996eb7c9d4be7b8d08b50b89c977c7c3ed7d469169e34ef96097ee02
fbf1e82fb1a5b3da0a86d2904bbd6bd397d1588c361bee5801124a0147cabddd012098fc3abbe50b
85ca27c1a855174d8acb9c33351fc0eaff87745d21f9255c3dd8840284cdb535ac27d50dfcbb257e
4152cc87374141f00c0b40c990accb398fefe2c26f2da2086530893cb948ed4ad737015816f978ba
cf7e451af683f5dbf07bbd50410e7a4a26da6cb11d1e488ca7699673d3d44bbffcf14e33473b9b4c
9dd3a7b416b79b9460ca335d6ba72ecb3b8d3d5238fbcf5abe11db2709e43ff995732163b60273a0
fe44645779c9d0beff964d60936c4264ea28491af06d3908325444c1010ce5f0cb4a2614368187e6
4fcbff08912a74643dcfeac6132b6f43addb716364efa0fb956d5f90a2d524d5d4799d4f71f2a328
5a1eed921803167584bdfae253dd101f436d016b3b75c53eb6c74d2a57a69794d6ae5cbb8d679c32
0306e4f37156f17f1a8f933622fa3ba06609033223e5d7c073ef220f8f11ac2e19d644d8a0cb2b51
3f6a09cfbda40f985508bbb5f4698f9fea2723ce163ad22f3304fdc081fcff49f7d1bc66c0e15558
3cdce6dc9dffcb4272c4c64c71170c668c38a35c4af74e69252ba888663112177a98fea79099b793
b93c32c394b31eacdea353645caf5f1eee3d7500c96d2a2a14750c6c8ce68cc44239124280a06113
c5f1837e37b725cec4aefec7047b9e3365f1c347b3f8cdf0f469e05d14e682706409abff7787b677
164cd8c45b36a6491dfb02596192d1a4afe12587a2ee45bd01c26d5314e1afe2b1bbed65e22fd7f7
f60a9aba34988539dc223836d76453707a16909ddcf6225ff6692688941e34749a8995baacbaf53e
d65d3a1cb8614776fa9be7242d082bfbce0ab2a7650259118aed30f716c441acda0236265b48a5c3
a2fb11adcedddd36d326fdd4c1726b05f7d31e66cf1f5c16f0bab244d286d53bd6fe7f2f1422cd45
410a33879d98522e6fbdf583b1f741afe67cd796e5df500accdd7c63aed80a2be925973c6fe32eab
71c7af7f8eb61d719b7e07e1d6a0e629f811f53681fb4cb6b8bfe136bc4d4eb9d539308c12b3f8f3
e645ad0ea24fcca4692f02476a36ea5557e6533e1fa2113a70cfb5de9836dedb5670aa1ce70ebc08
5805625bdef98c7028bd22baf5187cbda0b25f91ce0cc97965cd425b951c431e8fcd0ad3239e8b27
906fc80701621958e5705610fd51dfdc02537cca1bcc5c1b1b1f5caeb46058
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 All_Copy_States <Virtual>  0
 HBW_Manual <Virtual>  0
 MPO_Manual <Virtual>  0
 SLD_Manual <Virtual>  0
 SSC_Manual <Virtual>  0
 VGR_Manual <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"This is suspect -%3E<br> <br>"
"Need to check if its really x57-59  or 28-31"
#END

STR ST1
COPY 0x1 "4 0x0 Y22 MI200 1 0x0 Y23 MI201 1 0x0 Y24 MI202 1 0x0 Y25 MI203 1 0x0 Y26 MI204 1 0x0 Y27 MI205 1 0x0 Y28 MI206 1 0x0 Y29 MI207 1 0x0 Y88 MI208 1 0x0 Y89 MI209 1 0x0 Y90 MI210 1 0x0 X25 MI211 1 0x0 X26 MI212 1 0x0 X27 MI213 1 0x0 X56 MI214 1 0x0 X57 MI215 1 0x0 X58 MI216 1 0x0 X59 MI217 1 0x0 X60 MI218 1 0x0 X61 MI219 1"

// Rung VGR_Copy_State#2
// Offset 45
STRN C100
DUPBOOL
AND ST1
COPY 0x1 "4 0x0 MC200 C200 1 0x0 MC201 C201 1 0x0 MC202 C202 1 0x0 MC203 C203 1 0x0 MC204 C204 1 0x0 MC205 C205 1 0x0 MC206 C206 1 0x0 MC207 C207 1"
POPBOOL
DUPBOOL
AND X26
COPY 0x1 "4 0x0 0 MC203 1"
POPBOOL
DUPBOOL
AND X25
COPY 0x1 "4 0x0 0 MC200 1"
POPBOOL
AND X27
COPY 0x1 "4 0x0 0 MC204 1"

// Rung VGR_Copy_State#3
// Offset 91
STR C100
COPY 0x1 "4 0x0 0 MC200 1 0x0 0 MC201 1 0x0 0 MC202 1 0x0 0 MC203 1 0x0 0 MC204 1 0x0 0 MC205 1 0x0 0 MC206 1 0x0 0 MC207 1"

// Rung VGR_Copy_State#4
// Offset 104
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 Y45 MI400 1 0x0 Y46 MI401 1 0x0 Y47 MI402 1 0x0 Y43 MI403 1 0x0 Y44 MI404 1 0x0 Y52 MI405 1 0x0 Y53 MI406 1 0x0 Y15 MI407 1 0x0 Y16 MI408 1 0x0 Y17 MI409 1 0x0 Y18 MI410 1 0x0 Y19 MI411 1 0x0 Y20 MI412 1 0x0 Y21 MI413 1 0x0 Y13 MI414 1 0x0 Y91 MI415 1 0x0 X12 MI416 1 0x0 X13 MI417 1 0x0 X14 MI418 1 0x0 X15 MI419 1 0x0 X16 MI420 1 0x0 X17 MI421 1 0x0 X18 MI422 1 0x0 X19 MI423 1 0x0 X24 MI424 1"

// Rung MPO_Copy_State#2
// Offset 55
STRN C100
DUPBOOL
AND ST1
COPY 0x1 "4 0x0 MC400 C400 1 0x0 MC401 C401 1 0x0 MC402 C402 1 0x0 MC403 C403 1 0x0 MC404 C404 1 0x0 MC405 C405 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC408 C408 1 0x0 MC409 C409 1 0x0 MC410 C410 1 0x0 MC411 C411 1 0x0 MC412 C412 1 0x0 MC413 C413 1"
POPBOOL
DUPBOOL
AND X16
COPY 0x1 "4 0x0 0 MC407 1"
POPBOOL
DUPBOOL
AND X19
COPY 0x1 "4 0x0 0 MC406 1"
POPBOOL
DUPBOOL
AND X13
COPY 0x1 "4 0x0 0 MC400 1"
POPBOOL
DUPBOOL
AND X12
COPY 0x1 "4 0x0 0 MC401 1"
POPBOOL
DUPBOOL
AND X17
COPY 0x1 "4 0x0 0 MC404 1"
POPBOOL
AND X18
COPY 0x1 "4 0x0 0 MC405 1"

// Rung MPO_Copy_State#3
// Offset 137
STR C100
COPY 0x1 "4 0x0 0 MC400 1 0x0 0 MC401 1 0x0 0 MC402 1 0x0 0 MC403 1 0x0 0 MC404 1 0x0 0 MC405 1 0x0 0 MC406 1 0x0 0 MC407 1 0x0 0 MC408 1 0x0 0 MC409 1 0x0 0 MC410 1 0x0 0 MC411 1 0x0 0 MC412 1 0x0 0 MC413 1"

// Rung MPO_Copy_State#4
// Offset 156
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 Y30 MI800 1 0x0 Y31 MI801 1 0x0 Y32 MI802 1 0x0 Y33 MI803 1 0x0 Y34 MI804 1 0x0 X34 MI805 1 0x0 X35 MI806 1 0x0 X36 MI807 1 0x0 V1600 MHR1600 1 0x0 X37 MI809 1 0x0 X38 MI810 1 0x0 X39 MI811 1"

// Rung SLD_Copy_State#2
// Offset 29
STR ST1
SUBSCRIB "4 WX0 V1600 1 0x4"

// Rung SLD_Copy_State#3
// Offset 34
STRN C100
COPY 0x1 "4 0x0 MC800 C800 1 0x0 MC801 C801 1 0x0 MC802 C802 1 0x0 MC803 C803 1 0x0 MC804 C804 1"

// Rung SLD_Copy_State#4
// Offset 49
STR C100
COPY 0x1 "4 0x0 0 MC800 1 0x0 0 MC801 1 0x0 0 MC802 1 0x0 0 MC803 1 0x0 0 MC804 1"

// Rung SLD_Copy_State#5
// Offset 59
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block All_Copy_States
$LGCMOD All_Copy_States

// Rung All_Copy_States#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#2
// Offset 8
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#3
// Offset 16
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#4
// Offset 24
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#5
// Offset 32
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#6
// Offset 40
RET

// End of Code Block All_Copy_States
$LGCEND All_Copy_States

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 Y35 MI600 1 0x0 Y36 MI601 1 0x0 Y37 MI602 1 0x0 Y38 MI603 1 0x0 Y39 MI604 1 0x0 Y40 MI605 1 0x0 Y41 MI606 1 0x0 Y42 MI607 1 0x0 X40 MI610 1 0x0 X41 MI611 1 0x0 X42 MI612 1 0x0 X43 MI613 1 0x0 V1200 MHR1200 1 0x0 X44 MI615 1 0x0 X45 MI616 1 0x0 X46 MI617 1 0x0 X47 MI618 1"

// Rung SSC_Copy_State#2
// Offset 39
STR ST1
SUBSCRIB "4 WX1 V1200 1 0x4"

// Rung SSC_Copy_State#3
// Offset 44
STRN C100
COPY 0x1 "4 0x0 MC600 C600 1 0x0 MC601 C601 1 0x0 MC602 C602 1 0x0 MC603 C603 1 0x0 MC604 C604 1 0x0 MC605 C605 1 0x0 MC606 C606 1 0x0 MC607 C607 1"

// Rung SSC_Copy_State#4
// Offset 65
STR C100
COPY 0x1 "4 0x0 0 MC600 1 0x0 0 MC601 1 0x0 0 MC602 1 0x0 0 MC603 1 0x0 0 MC604 1 0x0 0 MC605 1 0x0 0 MC606 1 0x0 0 MC607 1"

// Rung SSC_Copy_State#5
// Offset 78
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Manual
$LGCMOD HBW_Manual

// Rung HBW_Manual#1
// Offset 0
STRN C100
DUPBOOL
STRN C2
AND C1
STRN C1
AND C2
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C1
OUT Y48
POPBOOL
AND C2
OUT Y49

// Rung HBW_Manual#2
// Offset 29
STRN C100
DUPBOOL
STRN C4
AND C3
STRN C3
AND C4
ANDN X0
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C3
OUT Y50
POPBOOL
AND C4
ANDN X0
OUT Y51

// Rung HBW_Manual#3
// Offset 60
STRN C100
DUPBOOL
STRN C6
AND C5
ANDN X3
STRN C5
AND C6
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C5
ANDN X3
OUT Y5
POPBOOL
AND C6
OUT Y4

// Rung HBW_Manual#4
// Offset 91
STRN C100
DUPBOOL
STRN C8
AND C7
ANDN X10
STRN C7
AND C8
ANDN X11
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C7
ANDN X10
OUT Y6
POPBOOL
AND C8
ANDN X11
OUT Y7

// Rung HBW_Manual#5
// Offset 124
RET

// End of Code Block HBW_Manual
$LGCEND HBW_Manual

// Beginning of Code Block MPO_Manual
$LGCMOD MPO_Manual

// Rung MPO_Manual#1
// Offset 0
STR C400
ANDN X13
OUT Y45

// Rung MPO_Manual#2
// Offset 3
STR C401
ANDN X12
OUT Y46

// Rung MPO_Manual#3
// Offset 6
STR C402
OUT Y47

// Rung MPO_Manual#4
// Offset 8
STR C403
OUT Y43

// Rung MPO_Manual#5
// Offset 10
STR C404
ANDN X17
OUT Y44

// Rung MPO_Manual#6
// Offset 13
STR C405
ANDN X18
OUT Y52

// Rung MPO_Manual#7
// Offset 16
STRN C100
DUPBOOL
STRN C407
AND C406
ANDN X19
STRN C406
AND C407
ANDN X16
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 60
POPBOOL
DUPBOOL
AND C406
ANDN X19
OUT Y53
POPBOOL
AND C407
ANDN X16
OUT Y15

// Rung MPO_Manual#8
// Offset 49
STR C408
OUT Y16

// Rung MPO_Manual#9
// Offset 51
STR C409
OUT Y17

// Rung MPO_Manual#10
// Offset 53
STR C410
OUT Y18

// Rung MPO_Manual#11
// Offset 55
STR C411
OUT Y19

// Rung MPO_Manual#12
// Offset 57
STR C412
OUT Y20

// Rung MPO_Manual#13
// Offset 59
STR C413
OUT Y21

// Rung MPO_Manual#14
// Offset 61
RET

// End of Code Block MPO_Manual
$LGCEND MPO_Manual

// Beginning of Code Block SLD_Manual
$LGCMOD SLD_Manual

// Rung SLD_Manual#1
// Offset 0
STR C800
OUT Y30

// Rung SLD_Manual#2
// Offset 2
STR C801
OUT Y31

// Rung SLD_Manual#3
// Offset 4
STR C802
OUT Y32

// Rung SLD_Manual#4
// Offset 6
STR C803
OUT Y33

// Rung SLD_Manual#5
// Offset 8
STR C804
OUT Y34

// Rung SLD_Manual#6
// Offset 10
RET

// End of Code Block SLD_Manual
$LGCEND SLD_Manual

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"Sensor data, and Auto/Manual switch<br>"
#END

STR ST1
COPY 0x1 "4 0x0 Y48 MI1 1 0x0 Y49 MI2 1 0x0 Y50 MI3 1 0x0 Y51 MI4 1 0x0 Y4 MI5 1 0x0 Y5 MI6 1 0x0 Y6 MI7 1 0x0 Y7 MI8 1 0x0 Y80 MI9 1 0x0 Y81 MI10 1 0x0 Y82 MI11 1 0x0 Y83 MI12 1 0x0 X0 MI13 1 0x0 X1 MI14 1 0x0 X2 MI15 1 0x0 X3 MI16 1 0x0 X4 MI17 1 0x0 X5 MI18 1 0x0 X6 MI19 1 0x0 X7 MI20 1 0x0 X8 MI21 1 0x0 X9 MI22 1 0x0 X10 MI23 1 0x0 X11 MI24 1 0x0 MC100 C100 1"

// Rung HBW_Copy_State#2
// Offset 55
#BEGIN FMT_COMMENT 
"Manual mode enabled. Coil data is copied from the switch "
"position on the HMI<br> <br>"
"Sends a 0 to the Modbus coil output to disable the switch "
"for reference switches"
#END

STRN C100
DUPBOOL
AND ST1
COPY 0x1 "4 0x0 MC1 C1 1 0x0 MC2 C2 1 0x0 MC3 C3 1 0x0 MC4 C4 1 0x0 MC5 C5 1 0x0 MC6 C6 1 0x0 MC7 C7 1 0x0 MC8 C8 1"
POPBOOL
DUPBOOL
AND X0
COPY 0x1 "4 0x0 0 MC4 1"
POPBOOL
DUPBOOL
AND X3
COPY 0x1 "4 0x0 0 MC5 1"
POPBOOL
DUPBOOL
AND X10
COPY 0x1 "4 0x0 0 MC7 1"
POPBOOL
AND X11
COPY 0x1 "4 0x0 0 MC8 1"

// Rung HBW_Copy_State#3
// Offset 109
#BEGIN FMT_COMMENT 
"Auto mode enabled. This turns off all coils on the HMI."
#END

STR C100
COPY 0x1 "4 0x0 0 MC1 1 0x0 0 MC2 1 0x0 0 MC3 1 0x0 0 MC4 1 0x0 0 MC5 1 0x0 0 MC6 1 0x0 0 MC7 1 0x0 0 MC8 1"

// Rung HBW_Copy_State#4
// Offset 122
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block SSC_Manual
$LGCMOD SSC_Manual

// Rung SSC_Manual#1
// Offset 0
STR C600
OUT Y35

// Rung SSC_Manual#2
// Offset 2
STR C601
OUT Y36

// Rung SSC_Manual#3
// Offset 4
STR C602
OUT Y37

// Rung SSC_Manual#4
// Offset 6
STR C603
OUT Y38

// Rung SSC_Manual#5
// Offset 8
STR C604
OUT Y39

// Rung SSC_Manual#6
// Offset 10
STR C605
OUT Y40

// Rung SSC_Manual#7
// Offset 12
STR C606
OUT Y41

// Rung SSC_Manual#8
// Offset 14
STR C607
OUT Y42

// Rung SSC_Manual#9
// Offset 16
RET

// End of Code Block SSC_Manual
$LGCEND SSC_Manual

// Beginning of Code Block VGR_Manual
$LGCMOD VGR_Manual

// Rung VGR_Manual#1
// Offset 0
STRN C100
DUPBOOL
STRN C201
AND C200
ANDN X25
STRN C200
AND C201
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 60
POPBOOL
DUPBOOL
AND C200
ANDN X25
OUT Y22
POPBOOL
AND C201
OUT Y23

// Rung VGR_Manual#2
// Offset 31
STRN C100
DUPBOOL
STRN C203
AND C202
STRN C202
AND C203
ANDN X26
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 60
POPBOOL
DUPBOOL
AND C202
OUT Y25
POPBOOL
AND C203
ANDN X26
OUT Y24

// Rung VGR_Manual#3
// Offset 62
STRN C100
DUPBOOL
STRN C205
AND C204
ANDN X27
STRN C204
AND C205
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 60
POPBOOL
DUPBOOL
AND C204
ANDN X27
OUT Y26
POPBOOL
AND C205
OUT Y27

// Rung VGR_Manual#4
// Offset 93
STR C206
OUT Y28

// Rung VGR_Manual#5
// Offset 95
STR C207
OUT Y29

// Rung VGR_Manual#6
// Offset 97
RET

// End of Code Block VGR_Manual
$LGCEND VGR_Manual

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Spring 2022 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 02/14/22"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Call all copy_states"
#END

STR ST1
CALL All_Copy_States 0x1 DST511 "3" "3"

// Rung $Main#3
// Offset 9
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#4
// Offset 12
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#5
// Offset 15
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#6
// Offset 18
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#7
// Offset 21
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"HBW Program"
#END

NOP

// Rung HBW_Program#2
// Offset 1
STR ST1
CALL HBW_Manual 0x1 DST511 "3" "3"

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

NOP

// Rung VGR_Program#2
// Offset 1
STRN C100
CALL VGR_Manual 0x1 DST511 "3" "3"

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

NOP

// Rung MPO_Program#2
// Offset 1
STRN C100
CALL MPO_Manual 0x1 DST511 "3" "3"

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"SLD Program"
#END

NOP

// Rung SLD_Program#2
// Offset 1
STRN C100
CALL SLD_Manual 0x1 DST511 "3" "3"

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

NOP

// Rung SSC_Program#2
// Offset 1
STRN C100
CALL SSC_Manual 0x1 DST511 "3" "3"

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
#END

