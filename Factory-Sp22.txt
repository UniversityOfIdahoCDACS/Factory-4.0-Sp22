// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\Jacob\Documents\GitHub\Factory-4.0-Sp22\Factory-Sp22.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
22d353de4de494ad5f4598394a38cd3a5459bff6339e21a9a452c1136022b2a7e364c9e003e0a5fb
77ce3aee11e85a879425b9c5a6ba0bc62f440557f2ba44c489fe9ef8612e93e1bbd1d16ace206a39
9551c1989a61084be3d5775056d51e8b464e61a561a084bf7aadd64deedc6258a1f683dd569a53b3
1d715a23f384054e2cdefcd7627a9a614dbb14f0edc6d98df808b9497fc61019dc133908db953e6b
505b553f9f43dc309875cf41c65cb98dfb19e9ef211b8743a47850670bb18b815a33b5503f116eda
bc8aa1079086ae98c0de0404ff35704cc86f285661fc0a2ce89b755d58ce06a0090140bf40be0ae1
3fc4930c42f367b0f991d924e869be865ee09defbd2f016f562e2d7a3ca1b03387c19c7225de900e
45a36e54303aa41958653bbeba0b72d793b3973766817b4d0578b77b2215cc7f5fa5c1752b0c8796
8a1b6315ca09035af88daa59948cc9ced64288795efd1c970f0531143523100bbf679b99ca29d457
025d0e96ca3d92b15f93ccfd2fd1d6c955e0ce8daf236fd53176407e9b5bac17fd455332ffaceb99
52a2ba4a413f95d4c6bb6032f06a64977cf8a4a594a1919fa20df915e97bd6d1bf2e8168d42abf5c
2a314c4533081c925166fd01343940684be64dc081ec65527f4a02c1077f36b9858feb8452ca31f4
f5dbda74fb392e5de86b8862c3b3a1f87119ecf0ba5fadf85e32ec24fa6c43adddeff0afece17df8
705c99d797d7d95c0afd2ded08a47ec3c7739d4a2619bbe7e4a5d8133674fc26e6f05277186b3b7c
253e7a0402c81ca5a4ede540f68ad54ef635b6cdf3079a68caac724488483598908d2288241c5393
887db23c4ef0c6a1121b17369a4d2e6aec214c3d7a81aaf229ad074647e3d4f306850cd0cd17b13d
0c64495eb4723b0d3c7d3f2f371ee0fe8045dde60239578b777c0321a0c04f5fd0865a37886eb60a
ab7c414afbb4865dddfb4c9a5770b2941649e2e49ee5f859ff22326f27ea559690e88b92e2444538
712fa623c9e11189e53960c16d8b23afc859c036cf1213dd0331d37e136e8a1f7ede4206946970a3
8aeda2607005d0e541ca32a74bb8adf71ca714f0a9317b1679995949a02b610bfed9986ed44fc7cd
62b8de6617b687ce83ac4cc106fcd93606d91584a73175681c4b2510fcc20ea58d5486dc930e27f4
f3c3b6a340eb7ca99e550c17b3ea3a65ccf6def479690e27f2e92d95e7ac6e784ca2414bb2e880a5
fbad469d222b01d531d64c69fdaa1ebba641c5cfc2ffc6e142a065ca310e2adb06145ffdbc8c93c7
19b788811a117cffa7f86fd77c494e3776d59ea8f0c3347c406c00d3e5485e2b264670f1bfccc5b7
7daaf23c6564e2b1081c5375354897c734ed41308026d4a3b1817e0daa361f8a37e3ef157c462238
553c2a557513fed26822f9893b6c9b8e0f3c165e564e232218747cddb8697fcc6d36fb78539d8364
4037e4afa82b89f7987e7a19a66af1ae9c54f9f25be27d9e4621a0ee18e6acea25feeadf8756d8f9
d95d4da03574cf6ac349ccad21c01d53b0afd1ba23a33e80be722da04c998ccf971bbbc70c1b63f2
3513ec6818553a650540ed59dad5f8f696ec0832040ced70ed4b0b7a32c245517227855f0d25d333
57b723b23e0d23b6c5b45549240c61a2e225260c5753c52796ca394bda830d9760edc5dec165a04a
e3fedb566ee48aafc7cf7663c4a71197cba3253026b4c92c8803298985e4a7a66f33dea973150ee1
b9d6a353204c1d794e6cc8a1e7403a3763ca32384b3533276a60194a19cc6e38c2111f5fa699307c
c3d509bd41c11b9c53cefebc34d7af4e10a38218cb2ab0a67aceb230ea6da23f0f4d99cfbdb5ca71
4918da0de0107b7fed4527340c41cfda12c260f610cbe58de7ca35231aef2d3b22ac8ddd9c0369e9
cc2d4a73577843ca8cacc73ac41d9b4adc4c0f387ce6faa14d116718663d8ff90f4bccceb7fc6cb9
9961522e359550bdab71a37c17c7286df4dc92922efa44ed2062c3450f0671a5c2f56b9a3c191fa8
b7cd4113d5f096822062d423b4358c57e82a92a5cf79a027531b2066ee41f463f4ba9761d4540cbf
fe04c6a05d875c3536c495d3c65f815bd4ca2cf1b495fc43507117f720d5c809a23a58321ff1a4c6
fa0ffa2a5497329db07d216c3e99290d68045ddda5529509e255fc655e249e1d48d25a50f59ffed2
4bf165ef34b6d74bdfbddc87ca437ae309d7e89c136f09b44ab00b7b0cfe1d81f28543b18aa0ca5b
4465a480fa35196ce30997a8dd32eb8d30cc3e853e4cbe4d91e29555a77c2f9dbe3a8ac7759a5a7c
510ce9996751037cbf4e58846cb9b8a746a0874499588f643edb3887da600d4bd87b1692ea64ab09
372b4b9486938508d59b1923d631947bab638ea891a78d89ad9a38490cf17bb44a1ce107a038c13f
e0338354b6d2533f747891adf43fc7950264c63c49fb7092d200dc278649e66a8bc541cd9aced3e9
bbb4c87ed019766c61e69c1b96c6813c721d83093560e6ca2e8ee2d26e5591cbe39cebedc4174003
a352e47ac81547c08b028b7debc1cf63ce219b9b17e6d2b356cc16fac7006df7defdd7f3c4b744bd
16e5b742847af6211bb5460cff0f1fd12acf0060896ef8a97f09fb0a2bd565ec57bc4f610d285d6a
ea892dcdd710d67bf677d21764b47a0e46eca8560e4832b774691a4ccb0e409e4d3c5aff3f17c2ae
c64017653d44ffa2aaaf5e5fd0c207ce7a77a274392ce867f52ee882275f7697e5ce61742a9e4f8e
60bb25d40181635511d58e1687b98dddcf44eb4b8225e2d12a6e1aba3a33b1c29fc29b52e5e3d5fb
50ee2cd7eba972e2cb9ebfc4d4e8b061886ca7413af166efaefa1346ca0b8850450764ceb511203f
3f193700ef500400a71a52f85377ee2010e0e832cde535a0ed784bc562469f408481de86dae15b40
c77abacd040e3425955f9e0da5c0a38455ecfa1cbf2368a505ba158661cf804e95bd9d70d87bc999
2a95550df0e1cbe45f9fd7bff4a699d51368237d55bfbe6e73aa1df9dd9ff64131371c44753c2cd9
7fdfbd3797a3814a088842e7552edae26add26b7f88eceae3deea0c4df143470068a135ca885054c
7e74866a07c9d99ef69b3cbe60bd51f4e0eac890471348407898b2233425d80ecc42a9094cb9f925
9f1e82260b81ecd9eaf2ac8d9ec63d5cbda04257081104650a6c265fd3a0fcd9a5f628a90a36164d
d65c6fc6883a432ccca1d9dabbec1dbd4c9559de574158f8c5ba0f313fe3aad1af4dc3f6b518e17e
4a4a05b67c8e1a330d180e3d70384cf12977d471226482d73eb345508b2a779339db4a1fdd34c733
37e1355c0aa7d57fc6392256df01c2d1f939021bbb8601a17f6c96954d75a930c18666582699b566
197366aea688cae5f123cb0b8e46a41811ef3aeef9509722bddbaac875a34505242c72a1c484b1ac
b0d00d7b118cd1c24818246e96c2aa40d91294d52fed2bff65cc0bbe213fce9a4eeba69c038860d2
1db7ab582ed3ae93b61d3efa4e3b724c1b3af39ec177dbc7f93af30b2ea05617c8dadee6cf9c867e
dbd68b36fd2b4f0fd5752af7110696897e8dc3b0f181df0f0208d74e71f554ea8163ae1977225c07
5314fa06559a537b8a3aed3b474bc22a57c5671d43743697c81d85c7426a44acfc19141a91f76596
4ce76c6d4a27224087ec9e1f8518b3476bfd7d2767f5d67d3cd60a09bfb63a974f6e0771c1aac6d9
946148abe26e11442eac13c8482385b43077566f838656192ecf86aad93b86f1ba9f66663ba962b4
d04e34154895731487d5a1a988bc634fa62438dd05f4d0007c7019fe19e2131c315a686c9ab084aa
225dc4856fb3f4e220dee68e8f2761120dab14cf0db602f3fcd19aa8f8eaeabf5054da5640a3f4f5
fb86b96df2eda12beb68106071a71c8add38f392a0f4304f4c25a34b729aca2f323c33195e60d7fe
13884490f235d0b7aea565829fdd14060653fcf9279edd0969759590b20dc3475ea919721e014d38
11f2bb374cd967b1d3d434e756f48ed090027f21f46c8e0de817eb5ba5795decfee95d1d9af6179c
e49485472cbea595931b684fdb5b0181077842f683caf4a2d377b081993ba7af3f8308d6f88d868d
4daa87c5c672982bf2b73a34f581bf5d8e9af1a2eb802c84f86843762da31b5aabc49b6276e4f737
860df1a66ddbcdff0310e4dfb49db583dcf58c8fe6aa1f30a303d4a5ca1d11f4c629d478dadd7e4a
7b7ccac92f821c0987779b6da47ff04328e6f7b741992258fb76ec2451d6cf39602853fdab9d24c1
e82028064479aa35d61ea8fbc83aea9e65eac605cf3e6e375bd2969491c75f9d1b63c2d43562636d
0495f0d4740ba85e333b21dd3834c70d942730d47e834dbac7f3e1351f162713cb37664a57a59bef
66332cc969656c120dc4325636ec445634d850787585c1654f5a38bfd47a6bdbdd0dfd11fe739121
c0d34714b526ab51ad8c8c6f24a8df0af36ba49eb9b1cffe37c1a5ed76c5b13c2ef59413a22fa272
3fa41c4d9476a1f36ae65437991bd3e945e4cd800252da097d2e5d24f71d191536605ed7aaf90181
3697055da12356b44a93f254978255c9484c62488281f5c74a32f977eb53a2a367bb5f012d3d6af7
617e57e6259fbb78acfa90a10f5275e5e238ef882c920bf2c7226dff199f60979337d388ca2d007d
548526ab1ceb21492d1b311e9255e30637010b381528f8fc09dea4a71f3450668c38f938fbe6ed96
093cc44398083159f54d803c2055c04cbf2540cbdb3cf3d883ccbe04f97fd0b279b24d6d078c048a
76064f1c39bdd86197703fe23bf53cf708283453e55377ce392ef11c000486c1185cfaa6bcbd9951
bdecd6ab4205da8ac5decb48ec31a42e82d1b0bb46176f82fad63d0b33edd27a20942859a2928b75
2a82618ba2d887f67e11ee07b629b6247b9061a23f62927dab3510613e4f47cc80faa68fd4a9aae5
37c70a3caa18bc567f045b2aa2cd32db2974fcc9cf295c0f697a31fbcd52079abd833d1fe8d97e24
76f30b4e8c88a3da733cebbbe6c4ef5ba242a7412209a04900a7e5f2e7b80c3d7a5b3792f8331340
a78883ed5b4629a01e130d7d96431cc829639318dc1c74a9331b1244e4b68f91d2cc11df31a583a3
94298225eb208e7b0f01937bdc83b0e0b2a360eb72e8db568efc18900367f34b757878b97b480252
71fb84f131a70ed53c4cd69a218a63f1a65d8c0ff3f4553de3b98202191d28e07ed649e02272b48f
dcfc52e0fda962e952381194940c441fe8b46e8e384f135ca47d1b0f1b3f6bd47bc1bdefa7deef67
d9f3f3352963baea1342d20d02e3eba7fb2587382a21563b2f5da1cfc985126cae51337370546dda
84fd716beb45e7e1b07915f8f30a348ca745f9472b79d5be75594008bd2ba5ea814c9ff3546e5798
82598bdf6df04ffb18d83c0fab7c534967f33071cac1e8ff834667e083e93cc2a8d3ef518749bc80
f9015de4f46b55c0c5067953521fcf0798346e23c107d000e97141635430ad6405dd6ef4242faed7
ebd6b85b8acb16ebd2532af509e74466f6b6e7eca08772a581877390cfa8ed7e1db44d914b1c6071
e1e38aee443b6dba4814dde6cd1f80b7e756144aba4d56d8aad701d30fd5b27ebbbb3237c1d14563
7f2e407814915f472f212cc1b7f2c26c742eb872f1f2baa5dc305d45f5a45ac372f111e946836a7a
f4610354cd607f12f3dab63a152439420f488bf31799ed95a212459061b883d194854bd34dbf74d0
a9f137a3d9c775de059e1859d1c1a83089bdbb348f79bc7eddbd2355b05c08b819820b55404d27c4
d40263286cc20085e52a8c6409b768e7b78250d5f08030c2888d4df20c498ec5ea326900c11582e4
fd2431f9b3dec9457c4f3789e44eec71f4bfcd68f6ce10f54aceab9c0fa24081e64a5452815a21fe
f60901900ff95db69896964559f904510f50524a7086c9eddb4ed50755a685623c7162c312c0ca67
e5ee22669d0c81e1b6995e9c341563070d45528081e98f4c90c88bed2526bdba58b1e19ac96c046b
4dc924ec715e25ea57665a08c9d072bc3cf6877cfac87c9a95cecb2355439131da2ff1e22b0d8c89
3f0b0443d43252e668b8af9abc5e362a3b6e2d267d8aa69ce54cf850e85b1f0db60bcdab0ae4d904
1b045eeeed5bb56689ee0fb4c73924b0cf5ccb242311a18ba2bc7f5e63d976235d364ec85376c06d
4c9fc3813a3c0c2062091aef32f19fb556f514796c40f6a0d274e8a74cc0f8c7de1d2f2e464f93bd
8ee4aa149d4f69a7c75a4872d397facf4443fb4a2defa73fc29cc57ff28845e5cda5323e58ff1000
d1db7fe30f7d6ad57047906fd118abc8409a125167e4f77a63241f5b0e93d0e676f2babc695716c1
a0ee763df36f1ee11a9306dcb3932adea649f1c23a93c435c67f5809f80a6875eb514dc2d588a028
4328091030220489d9be975a7c74216b43e9c48f16cf58a63513506de3df1975b5349f31c7fa2534
8b7625f444fbbddf20425aa4e804f7bbe266bc2cd442208beeb20b4de5c375b0de386a1bc7c64e13
466ef1fdf7399098176cd63dd949ee60497ae39d8867cfbbed2cecf4c9f08d1e1d87343ae24d0e56
8ed9fbbbc023712f783da8a349bd8ac10a6d9c51870de82cb9a53ffce56d670993c7101bf2307ce0
7120df91e4ceece4b12c6f59e8bd51a2a85175e8c05f636b58eab758f75b4e2f553dc89edf75b3a3
a3e6385d8ee5dddf89edb243b2ef5f162db05fad465c5162b8b24e9380db0d175466ca5ae8558d0b
2eca4fa99272d8d79d213272829262efd4810cd543c3c693f4ff06442d8bda411d4e914b8cf53db0
3b3c1b2e594f17138120a310bb59dd959f1503bbaea081c53116710e0d0ef7c1ee8d292d70fecd42
6bcbabbd078376f8f357cbbc83e631fe51445ccaf578569480ba98bbcf2bc2ab35ddd3deaee507fb
8b71645a610f50f2e4688fcec0a404d64ab6a720337f9345bad19c02bf17a73163269508c71c323d
1fb03c29d8e7a7ea0a09f99c87bdc325d4837aefbd984842cf0f41bf8e3327c879dbfdf265ed8195
a1fb70f9ceb15a86ff55ac7b775be968ff9cf1559cbeb3d346992f4e36ec13ab9f9d63f6c2e930ab
1182da1bb793d3b473bcd35620197cfa888b117a104d45923d6ceb6856b0cb9ffbf79e002c49d258
4bdb706d449788c3b2f04932677aa8348824df771ef8ede3a2c9cf0d6fa61067729bf138f54a4dd1
7d6969139efcac3306ec1ebd4bcad91956f21fe99f75a47a2cb704c010b2b5ca195ceb754d1439f2
d7170ca826a083f3d7f140fb26927b00ec03aa1943a5d5396cf8dbcc8fbfde9806031a6289e812b9
547c085bba684dca4c1fdcdf558e8b942d0a86208900e6d32e9807c526fad5541fdb34018dad93bd
43c585263c259eb5508fb907320c1bdffee3556fac3ccc9e6eadfed42ddb0ead4ffb782561c99e6f
b120435d2944a5396bbb31c8eb13015366ffe38b6a09ecccc1db280f0db9a11cfd6ac5f18d0db899
6fef3bbbbf24041e7bc5e924efbff755983357b1e5a64b680e9283c6acd7381b97d1e9487a735afe
da232d98dc0e2fc338f6c2d5d77caa3f64372e0d14e7856fb72af0760b341a8470012eb68d6db071
59cb281bf405d23c13d24aa50581eda0c2f2b7d4d97fad0c7bca14cfa975f11933906b15805cb430
20f36f54bf4058296c2b5f6d2eba4d16da9d2d2d4a2f8527d49d3c7b7ceede20e94c189edaf1b983
d931a4c664b6c62f136df60388f55b95e0770bb39d6d55fbadeffa9a9751f273b6ea50ee787fd6a0
761a81122f73484bdc77e814ace7d2b5d7d7992f75cda7c9a30d32bd9b4dfff43ac92acdae1c6b94
18a2b6d11865086dc864204c6ef07f003abc3e2de3dc9403a8619b87f0e67c32f4ae7f454fa12634
4b8aae00fbd51d6305603d86a5c195520564d92fe14693e1d538d06f3da7d6bca0791ac2fd87336d
112d1d966e4ebe85bd0c6c6110a7d744922ff720a4da2ad142cb9fe5f68fbd02f9837b3105bd4e7a
b8baff58b80d58d438773eb8deb3064339bb8403a4f00b6c0d21b46fea48cdb0c929b038f7159524
436a8b0b1b93e509cc67d5387a8de8cd6cc9470de240fc07e1e3b68af1a0027198c0d2e933fddc9a
0be1e8f17a4af1b9cd0ee70125ef0af12e4e3f740bc79da81d301faae294eb9b8dc18aada18423d9
ecd2ba3454b8fa29695c4d242862e4fd2fedc1fc6aac41e7d77947245c7c7dec5a94a9db4ff137a3
358596a4a8296bf92e9278686adacb71dd2870e74356855c40b83cca38e4b69e30487d3f6d29bfae
eeb6f5410ee77c3add1c1647a918e3765f84046b0e890185fc35d1ef4d0392eeb495fba966ceedb6
5aeabd2ebc373723ffcab8cf48dd142872785693725d002f89bd2ca6cf01a8cb08b4e4c03ec6884d
87224231a0dbb00ad7416eeac745a27f89b8ab6b8aba61ec1f9e2bd5c305ce3fdfe26e4142afde1f
422e9f1287e9bc45f57f07114657d3d61688a294abbf2dc8c897e294bf36cd15b9e1eaa863432d70
a9fc21b19de32db750b7ea6143a65e7663232d6f1b40b683199cca64f8a627fa54f38f2a6377b371
4e832a0fc67292b6908c020ce4ddef8e702a0b794ec2ebc6a6f46c9f371fcbdf5d12f0dd6e6aae87
4f901bea6eaf74548d0115472b156759487a18a691ef56ac05527113dc07fb32a90abfe0d2662f1f
533fe91e73469992c7b39cb3426f749a96fe1d968c81b2aa946fb3291e5c93f16adf28eb0e53013b
72cdde0e318196909dab2c8fcf6477e15dd88b90c58638ebe5585f88649d0ce2edef45509d51837c
4ba679fae5f34c36c5413abaef6a956ffdd706b566ad2e11c6003b8a3b760dbed3c324fc2cd88945
8905bc4500c69e549b38840df6df1260ae1987f8a7c6c8b9bbdb433e0338e76043cb30d9f1cc74ad
00a267b81b444db3dd70dad312de9837765e26fcffe27cc00afdc8e4293a0c2d933fc5fefa73a42a
e81e775ba87a6a7beead643025020201c2b52c11bfdaf72d7e1d692fc2f8d53f16e950bf13d69f30
503f11758bfa6db2a2c6531e1b852021df14d2027634a2856f460dc37fc15d018869c22306bfc0ea
8babd904323fb8a0acf344261b8fdb6435d9c078069bc9e31c1dc14c2a3becbeff1dfb2cbda07514
1dcbb4cc407367a862cbf7bc63891317a2e0d838672e0a027b2d075e4c1b1666d16ce615cb9b3f2c
84c2281c93021a80db4b82c5b89aa45c3f5301501301940aa1be6026fbcfd99320ef1e2f74956942
4d9d1b6ec81c1cc767050571c1d77f3b3e0bda4d085fa223ce4daf1a090691554da7f0cca1d4f8b8
ba3d93f1495e380e5572db716666b2f888acaf28048c7b8e30a28f5b0a8915e0ce4b9d0d098c2aea
afa67eddd8edd1fa7e3707b54060180b5da875b23d7acca1277be0ec666911371a8c3afa01ae673a
6e1fd720f295945568c984f91290d64e5fa09548d01e6ce4531594179c878ebadc8dc22518b810d0
ea39b4e1dba785d133ff50dc0d4442c2deba8d6e81c8b52cbbec7d13712d60c9cf0bdaeb291c703c
0651ba7d5ea19f86b4589ccd896acef59d6ed1ea33d487a38b8e2dc2dfbd048128f5385f93ac6a78
fd470048e999caabf5cd15f738f53711ffd470c8fe0eb24271c7a783957b755dc39a586f2da52667
d944388aa320f6eac8a22536bf84f48b205a3dd9a7f089606e6796a97d3233f1291a9192c1153408
dade39aa0d233d1d454d07e4d9de82b981eee5059eaaf8454c90a40472a66ccf28dc12853d9d67c8
b52bc8a0bdb146f90bef1d5d6f758205dbb059f65e0f22d5f51b6f8acae4c4ca4f59cce0b9c28303
64c46b94bd035e532cabacdb7b62be3e224f161adba8291d591f2c3ae0084a32e12d7050c72415a0
ff8764ceadb6e54748f8720ce449972ce138cee96b9fe930d53c2fd70caafab94a074dd60bfa8a1e
9507d17b247aba9e90bcba1793057cf7d474b0a3000999f24369682f294feac062b585146e7273f8
dcfc3b0cabcf42a9c3313cd882638f2a32c3fc2ec423d25532f2cb5a63594c901113a08df504031e
61ef8d9f3f56ae46f4d1a6a91f4e63fa63126be41a2b7531e50a47c27b03efbf0fd8a3b876a116de
d5da8e0480fade06815da09d7f02e7013a88aef3bf8bb215950e651514ffa87623399e89c9b61f00
f073fab150c640fc62bab2964767fca409ef1b59fd15e23658b66a2966268ba2fccdc34838929840
462b6e85c8a620d5fa8c9b02c5b132f8b639be1473df43947335bd3e1df1b55f5aa35369c5415731
9055bab3dea7e3fb8f41023e857839ccb830dc78b46b1daf9eccc73476908f3f3fd7f562f3ccc8e1
33aae94bcfd785f4754b06d8fee98715314a60533c69da610f9b03a8feb1e1b31b639ad7de4038a8
d76ae7f1b6b97c72ee17fbfbc0e008be8283576a5ec0d30ad834e485c93401b742535c055171f303
78fbac616e7c4637179c5d02476b48d95f60f9b9c7145c0472c5c5f109696f4f8157a47cd98de4c1
a9b7bc131f9d91caf6200a72ddae4af5111a19b24e30a3fe85cc210a2b3c7d097510f1f6978df5cf
1490a6dc522f22829cf4a65b47e5323dc9cb15906e1abdde9729b4a74f9d9275dceef76bcc82b313
eff90cb01bac8d274b7ad8fc88e6fbd44ba91276e8e76a99f6df090b32a5ef2317dbeeab812adb42
f8953fa66970d0d685f41ac069488204d611c6d72edfb9e7e52a6e92fd54550198b32b7fbe6cb510
fc3f6bb77b9f62e002e1c4919f46bdfb99dd058f6a2180003e20d997810d032a37b04b2b5416887c
dd331c7871c85887ef5a2e572de81a27d545be94d1d9c78eadd1dc69ce11f563f4b3b47531ef4f2d
9cfedb8d46e2b8b94edfb20b209bd95fd39f3466907dd22cb7e5b85b40d07c2a65157f18ce448ad0
f16f9906f40b1b009eeca10a226c687dd896567f71a756decbdcb03cb543a2f5056b6955a35f6b00
c2dd9b620d9c9940620c0b59b1f7fc1f3e22bb32c35f3d776be6aba317b52b68909d768d81965b19
23256b42941cebd95ccf66363151dcbfbcc9c62404d747a34d76e49977e6c152e171f5a652e0e384
05f95367347c40bc0bdb946e006ac1832ed0671a07828177be20f68c18707a63e56adec6cca55797
be180e5b002749c513f215746ab53532b351b306e1e16b3f6c59f47b928d33ff615a08ae7875c049
44f7e78dbdeb088f80183223c53d4fd7c10fd3561d3c6454186252613fbc9170d08197331e76eb73
e6ea37d544fe563e4651d733ee8ac14bce516b3f6be7cbb553982e36ee04d18f8437340d6eb82296
be6d337c5a55b10fe7321a73d225fc829ff530c643fe40c2823c8c88a6360dda22a805b22bdca549
b0baa364faeef89141cd99db00f62098dc9a13c77d50a5134a59014a0c81f6964a6bd3b771f0ae40
ce816c8ae31e5c06c180d7787e548ba1b4cc3f166ab26e177693cf49cf86fe7ee76c9e46b7f06e35
0a1987cc7c0a0abb47400b82dbe78072c4a4a9892466e9432e7bc277f203a6019c7c4a135db233f1
84350e51bdc8be90bb30f61b0a4531016d9127fa565503c7ec22dd38989f00f4b7ba05780c70d007
d698ecff5dfcd0df2b81781620ec658070c6761973b08411f55a906c42af74b2de386a28fd4938eb
b50f2f1c32829bf5b4dd062bd827092fa1630251bb267243791f0f8a4a47aebb80016d5f7dcaccad
0480b443da613f2f7684a18d58602408e6903a282fa4ebb0de2614dbe99e6f9e9f32d6043ab9e863
1155a6d953485d3ecff6b1a918965b5408264a20703e8e75fd8c06611ceddcdf9de517f0c62cd779
484dafb83a1dba3451c4d87d69b170eb2d42487968ae9c8b38a46944c45ae765529d0f93eb80601a
74214284f6ef44d31e43f0febf22c4d4a16c68855d719964784fb68bcab7b402bc9af72d8baa1e13
7797ad97d6b48009398f8d073a5c472dc773e81701bc05226e60e3c32d7a595c31d3b5ecdbd2fcd8
f2777988dff855e795e8182f17e41455a5763e4b822661615f3e4727c7adc78f09725909cbeb2a58
8ebac8357cfc6e858fe5b58c4f30d5782eba880cf8b386bbbf22ab165fadc93b2f42e0b43cccfd3c
5d07938f107ded0256b049122ad99aefe4aa6ecce9a50ef64a8926185faae4a9faf0a62ea9649cbc
bd41d1f17fd3ce729769737d9c2f183b315ddbd697bd6914bd226dc3df557f3fd1c2def1e7f1be75
9d167157f32a0c3db1d0ac6f664360b08541f9ec2e49125ac1a67bbc5d8f0ae791497d6d1003ee88
e9b05ae68596967d986db69f8a39204ebc98552d8454175dbbf1f90f99cd9e709db534645f69860e
0a4178ccd6d3196524f6bec8fabc0ae4ad379cddae941b4187963728e5934160a26edc7724a865e0
3a8ce434c5fd563ad0354caa9debad62b35abe7dcab007fdf3f4aa7df70605f29e727bc759f8b3b8
ad0ee645e90487ef2264490c217da11e1cad187554e95a713b84fe95d37d95901d3be157ac45f743
134e291095b2c73b63f669f1be5337f6ebf914da854782322e860910de570855c486419868d5c06c
db24834c4a295213ae3b1d5bb61a94974918378150871750505417e5ff2b13
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Pick TASK  0 -1
 HBW_Copy_State <Virtual>  0
 PID_10 PID  0
 PID_11 PID  0
 All_Copy_States <Virtual>  0
 HBW_Manual <Virtual>  0
 MPO_Manual <Virtual>  0
 SLD_Manual <Virtual>  0
 SSC_Manual <Virtual>  0
 VGR_Manual <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"This is suspect -%3E<br> <br>"
"Need to check if its really x57-59  or 28-31"
#END

STR ST1
COPY 0x1 "4 0x0 MC200 C200 1 0x0 Y22 MI200 1 0x0 MC201 C201 1 0x0 Y23 MI201 1 0x0 MC202 C202 1 0x0 Y24 MI202 1 0x0 MC203 C203 1 0x0 Y25 MI203 1 0x0 MC204 C204 1 0x0 Y26 MI204 1 0x0 MC205 C205 1 0x0 Y27 MI205 1 0x0 MC206 C206 1 0x0 Y28 MI206 1 0x0 MC207 C207 1 0x0 Y29 MI207 1 0x0 X25 MI211 1 0x0 X26 MI212 1 0x0 X27 MI213 1 0x0 X56 MI214 1 0x0 X57 MI215 1 0x0 X58 MI216 1 0x0 X59 MI217 1 0x0 X60 MI218 1 0x0 X61 MI219 1"

// Rung VGR_Copy_State#2
// Offset 55
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C400 1 0x0 Y45 MI400 1 0x0 MC401 C401 1 0x0 Y46 MI401 1 0x0 MC402 C402 1 0x0 Y47 MI402 1 0x0 MC403 C403 1 0x0 Y43 MI403 1 0x0 MC404 C404 1 0x0 Y44 MI404 1 0x0 MC405 C405 1 0x0 Y52 MI405 1 0x0 MC406 C406 1 0x0 Y53 MI406 1 0x0 MC407 C407 1 0x0 Y15 MI407 1 0x0 MC408 C408 1 0x0 Y16 MI408 1 0x0 MC409 C409 1 0x0 Y17 MI409 1 0x0 MC410 C410 1 0x0 Y18 MI410 1 0x0 MC411 C411 1 0x0 Y19 MI411 1 0x0 MC412 C412 1 0x0 Y20 MI412 1 0x0 MC413 C413 1 0x0 Y21 MI413 1 0x0 X12 MI416 1 0x0 X13 MI417 1 0x0 X14 MI418 1 0x0 X15 MI419 1 0x0 X16 MI420 1 0x0 X17 MI421 1 0x0 X18 MI422 1 0x0 X19 MI423 1 0x0 X24 MI424 1"

// Rung MPO_Copy_State#2
// Offset 79
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC800 C800 1 0x0 Y30 MI800 1 0x0 MC801 C801 1 0x0 Y31 MI801 1 0x0 MC802 C802 1 0x0 Y32 MI802 1 0x0 MC803 C803 1 0x0 Y33 MI803 1 0x0 MC804 C804 1 0x0 Y34 MI804 1 0x0 X34 MI805 1 0x0 X35 MI806 1 0x0 X36 MI807 1 0x0 V1600 MHR1600 1 0x0 X37 MI809 1 0x0 X38 MI810 1 0x0 X39 MI811 1"

// Rung SLD_Copy_State#2
// Offset 39
STR ST1
SUBSCRIB "4 WX0 V1600 1 0x4"

// Rung SLD_Copy_State#3
// Offset 44
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block All_Copy_States
$LGCMOD All_Copy_States

// Rung All_Copy_States#1
// Offset 0
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#2
// Offset 8
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#3
// Offset 16
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#4
// Offset 24
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#5
// Offset 32
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#6
// Offset 40
RET

// End of Code Block All_Copy_States
$LGCEND All_Copy_States

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC600 C600 1 0x0 Y35 MI600 1 0x0 MC601 C601 1 0x0 Y36 MI601 1 0x0 MC602 C602 1 0x0 Y37 MI602 1 0x0 MC603 C603 1 0x0 Y38 MI603 1 0x0 MC604 C604 1 0x0 Y39 MI604 1 0x0 MC605 C605 1 0x0 Y40 MI605 1 0x0 MC606 C606 1 0x0 Y41 MI606 1 0x0 MC607 C607 1 0x0 Y42 MI607 1 0x0 X40 MI610 1 0x0 X41 MI611 1 0x0 X42 MI612 1 0x0 X43 MI613 1 0x0 V1200 MHR1200 1 0x0 X44 MI615 1 0x0 X45 MI616 1 0x0 X46 MI617 1 0x0 X47 MI618 1"

// Rung SSC_Copy_State#2
// Offset 55
STR ST1
SUBSCRIB "4 WX1 V1200 1 0x4"

// Rung SSC_Copy_State#3
// Offset 60
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Manual
$LGCMOD HBW_Manual

// Rung HBW_Manual#1
// Offset 0
STRN C100
DUPBOOL
STRN C2
AND C1
STRN C1
AND C2
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C1
OUT Y48
POPBOOL
AND C2
OUT Y49

// Rung HBW_Manual#2
// Offset 29
STRN C100
DUPBOOL
STRN C4
AND C3
STRN C3
AND C4
ANDN X0
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C3
OUT Y50
POPBOOL
AND C4
ANDN X0
OUT Y51

// Rung HBW_Manual#3
// Offset 60
STRN C100
DUPBOOL
STRN C6
AND C5
ANDN X3
STRN C5
AND C6
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C5
ANDN X3
OUT Y5
POPBOOL
AND C6
OUT Y4

// Rung HBW_Manual#4
// Offset 91
STRN C100
DUPBOOL
STRN C8
AND C7
ANDN X10
STRN C7
AND C8
ANDN X11
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C7
ANDN X10
OUT Y6
POPBOOL
AND C8
ANDN X11
OUT Y7

// Rung HBW_Manual#5
// Offset 124
RET

// End of Code Block HBW_Manual
$LGCEND HBW_Manual

// Beginning of Code Block MPO_Manual
$LGCMOD MPO_Manual

// Rung MPO_Manual#1
// Offset 0
STR C400
OUT Y45

// Rung MPO_Manual#2
// Offset 2
STR C401
OUT Y46

// Rung MPO_Manual#3
// Offset 4
STR C402
OUT Y47

// Rung MPO_Manual#4
// Offset 6
STR C403
OUT Y43

// Rung MPO_Manual#5
// Offset 8
STR C404
OUT Y44

// Rung MPO_Manual#6
// Offset 10
STR C405
OUT Y52

// Rung MPO_Manual#7
// Offset 12
STR C406
OUT Y53

// Rung MPO_Manual#8
// Offset 14
STR C407
OUT Y15

// Rung MPO_Manual#9
// Offset 16
STR C408
OUT Y16

// Rung MPO_Manual#10
// Offset 18
STR C409
OUT Y17

// Rung MPO_Manual#11
// Offset 20
STR C410
OUT Y18

// Rung MPO_Manual#12
// Offset 22
STR C411
OUT Y19

// Rung MPO_Manual#13
// Offset 24
STR C412
OUT Y20

// Rung MPO_Manual#14
// Offset 26
STR C413
OUT Y21

// Rung MPO_Manual#15
// Offset 28
RET

// End of Code Block MPO_Manual
$LGCEND MPO_Manual

// Beginning of Code Block SLD_Manual
$LGCMOD SLD_Manual

// Rung SLD_Manual#1
// Offset 0
STR C800
OUT Y30

// Rung SLD_Manual#2
// Offset 2
STR C801
OUT Y31

// Rung SLD_Manual#3
// Offset 4
STR C802
OUT Y32

// Rung SLD_Manual#4
// Offset 6
STR C803
OUT Y33

// Rung SLD_Manual#5
// Offset 8
STR C804
OUT Y34

// Rung SLD_Manual#6
// Offset 10
RET

// End of Code Block SLD_Manual
$LGCEND SLD_Manual

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"Sensor data, and Auto/Manual switch<br>"
#END

STR ST1
COPY 0x1 "4 0x0 Y48 MI1 1 0x0 Y49 MI2 1 0x0 Y50 MI3 1 0x0 Y51 MI4 1 0x0 Y4 MI5 1 0x0 Y5 MI6 1 0x0 Y6 MI7 1 0x0 Y7 MI8 1 0x0 Y80 MI9 1 0x0 Y81 MI10 1 0x0 Y82 MI11 1 0x0 Y83 MI12 1 0x0 X0 MI13 1 0x0 X1 MI14 1 0x0 X2 MI15 1 0x0 X3 MI16 1 0x0 X4 MI17 1 0x0 X5 MI18 1 0x0 X6 MI19 1 0x0 X7 MI20 1 0x0 X8 MI21 1 0x0 X9 MI22 1 0x0 X10 MI23 1 0x0 X11 MI24 1 0x0 MC100 C100 1"

// Rung HBW_Copy_State#2
// Offset 55
#BEGIN FMT_COMMENT 
"Manual mode enabled. Coil data is copied from the switch "
"position on the HMI<br> <br>"
"Sends a 0 to the Modbus coil output to disable the switch "
"for reference switches"
#END

STRN C100
DUPBOOL
AND ST1
COPY 0x1 "4 0x0 MC1 C1 1 0x0 MC2 C2 1 0x0 MC3 C3 1 0x0 MC4 C4 1 0x0 MC5 C5 1 0x0 MC6 C6 1 0x0 MC7 C7 1 0x0 MC8 C8 1"
POPBOOL
DUPBOOL
AND X0
COPY 0x1 "4 0x0 0 MC4 1"
POPBOOL
DUPBOOL
AND X3
COPY 0x1 "4 0x0 0 MC5 1"
POPBOOL
DUPBOOL
AND X10
COPY 0x1 "4 0x0 0 MC7 1"
POPBOOL
AND X11
COPY 0x1 "4 0x0 0 MC8 1"

// Rung HBW_Copy_State#3
// Offset 109
#BEGIN FMT_COMMENT 
"Auto mode enabled. This turns off all coils on the HMI."
#END

STR C100
COPY 0x1 "4 0x0 0 MC1 1 0x0 0 MC2 1 0x0 0 MC3 1 0x0 0 MC4 1 0x0 0 MC5 1 0x0 0 MC6 1 0x0 0 MC7 1 0x0 0 MC8 1"

// Rung HBW_Copy_State#4
// Offset 122
RET

// Rung HBW_Copy_State#5
// Offset 123
NOP

// Rung HBW_Copy_State#6
// Offset 124
NOP

// Rung HBW_Copy_State#7
// Offset 125
NOP

// Rung HBW_Copy_State#8
// Offset 126
NOP

// Rung HBW_Copy_State#9
// Offset 127
NOP

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block SSC_Manual
$LGCMOD SSC_Manual

// Rung SSC_Manual#1
// Offset 0
STR C600
OUT Y35

// Rung SSC_Manual#2
// Offset 2
STR C601
OUT Y36

// Rung SSC_Manual#3
// Offset 4
STR C602
OUT Y37

// Rung SSC_Manual#4
// Offset 6
STR C603
OUT Y38

// Rung SSC_Manual#5
// Offset 8
STR C604
OUT Y39

// Rung SSC_Manual#6
// Offset 10
STR C605
OUT Y40

// Rung SSC_Manual#7
// Offset 12
STR C606
OUT Y41

// Rung SSC_Manual#8
// Offset 14
STR C607
OUT Y42

// Rung SSC_Manual#9
// Offset 16
RET

// End of Code Block SSC_Manual
$LGCEND SSC_Manual

// Beginning of Code Block VGR_Manual
$LGCMOD VGR_Manual

// Rung VGR_Manual#1
// Offset 0
STR C200
OUT Y22

// Rung VGR_Manual#2
// Offset 2
STR C201
OUT Y23

// Rung VGR_Manual#3
// Offset 4
STR C202
OUT Y24

// Rung VGR_Manual#4
// Offset 6
STR C203
OUT Y25

// Rung VGR_Manual#5
// Offset 8
STR C204
OUT Y26

// Rung VGR_Manual#6
// Offset 10
STR C205
OUT Y27

// Rung VGR_Manual#7
// Offset 12
STR C206
OUT Y28

// Rung VGR_Manual#8
// Offset 14
STR C207
OUT Y29

// Rung VGR_Manual#9
// Offset 16
RET

// End of Code Block VGR_Manual
$LGCEND VGR_Manual

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Spring 2022 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 02/14/22"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Call all copy_states"
#END

STR ST1
CALL All_Copy_States 0x1 DST511 "3" "3"

// Rung $Main#3
// Offset 9
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#4
// Offset 12
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#5
// Offset 15
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
RUN MPO_Program

// Rung $Main#6
// Offset 18
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
RUN SSC_Program

// Rung $Main#7
// Offset 21
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"HBW Program"
#END

NOP

// Rung HBW_Program#2
// Offset 1
STR ST1
CALL HBW_Manual 0x1 DST511 "3" "3"

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

NOP

// Rung VGR_Program#2
// Offset 1
STRN C100
CALL VGR_Manual 0x1 DST511 "3" "3"

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

NOP

// Rung MPO_Program#2
// Offset 1
STRN C100
CALL MPO_Manual 0x1 DST511 "3" "3"

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"SLD Program"
#END

NOP

// Rung SLD_Program#2
// Offset 1
STRN C100
CALL SLD_Manual 0x1 DST511 "3" "3"

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

NOP

// Rung SSC_Program#2
// Offset 1
STRN C100
CALL SSC_Manual 0x1 DST511 "3" "3"

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
#END

