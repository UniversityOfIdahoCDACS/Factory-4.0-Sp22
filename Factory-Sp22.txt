// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\Jacob\Documents\GitHub\Factory-4.0-Sp22\Factory-Sp22.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
336005068310b9c9f0021328f96c17ce8a5ef1074ca19908bb5cda690166a7515410f49dbbd2a34b
6976a1a927f9b7f96cef50c0bade867db0552e0650d713254d1b287c04e22e9b9fc84322ece97370
13aca6460d7dd43b7c81bc13a5bc26c5b071f6f6f33bae910d73904db07381e84ce5047db137f9f0
775a2e4f4f030a6fcb7f4eb167fb8b4f3d72a836e065a19000456a8cf380e51a16c7dc6717d3e69c
d9f7081b5e1ab7de66607fedf23a13f9d8f1e478872560e7a817bc9d8670805ac0af21624a351f12
28c288736fd209c5432a0a5764abe96ce4b8fb38947327740673211680c6e114b6f4e18e5af04411
b5217a2f0523bd5fb3f7c94566e1179e8fc72db79a8ea8b00d21fb48b8bd1cbe5294ef83893bbb9c
b6ef546070fcde5aca1d4abe8383218a78bee5745a0621df06d6821420723709a6878b96c99cae62
77e24f70079b10e2fd813032ade1338fe00de5b9cbb0c4c13a50cce588284108c66ea96f12b7e91e
e75fc8a44fe46a3b1a4f159ca90ebe311734fa985ab2d552e16d7ec456d6a93afaaaf708b7deb666
23eee6ed78a60a3808d461e20f9d42995eb1fc30a684896dc76f87261a87c85d5b3183aca991e036
a268415048a13385ce75ddd0047c510cf266e88cbbcfd02364b2d52a90386cab6a1c8d2957f1273c
e5d982c208aa49fe1a9f3833294e9dd2f72cc5caea62aa542fffcc13a3f539397a03e435afbc06ad
33f716314cca5470d33dc79f008af8cd8275c597b5017bc85d9da307a3da84ba2a0905ffc0174ca6
83c1c99c89a3642650dad25afdc70ce19026266a0523df8c586bf70e186baddee79dc230fa67257f
98931332feb08741036341312d209920dcdbc7e8f82c49d12176daced002f04f02f4e1b1fa06b1a0
40530254892367f6d9f0cb7cb9714efc11923743d2a9c5230e4884adfbabbe73cc580ad321d5fc3b
df5364663339cdbba8128a0ae029200212fc43c7b045b5d9448168147bdb69c123b5604ccce786a8
07f980645710a6050bfd017f18da7794365fa6640c324e1d943197f0e9243bc700b5c3924fae6c41
cded78c0d8a84cd65647498a19a9442047daeffa57844b594d61bbdf7ba5845e2897d9aadc1c20b6
dd4ba1906608620ea2524bc7fc593d8eda88df4e9155d2185920da339a041780990d9a5b9cfbdd5a
dc3cb7913c5748b2efb0fae6acc569d827142b92265bec1d774d0e3c74b3e45b820401268e895e79
cfd780f27eb1e8b897358222e575d869c9c1a98ba372e95da444b4eeeff89763f222b8bdc51e2828
9c06427c4d5d96421066a9df2d292472675ebda2669b0ce7edd667768ff9ece156b2c9d571852b88
adb4d6c3148e0441231636ff00aed9414c4b3ab63a6431fb3c7e13d30f85220e4f1549448622fc5b
87d1b896f37fd2283135da17e1035af802bf29f34e1a561ceec0a5b3d54596a322d04dd15139dc54
35178d6ce36662d82791d1e5ef8b920c7b78f65f455f5f8cbb8d2c444273ed68bde9ea664d3d20dd
e3691c7cbf0f16b5961e80811561689b694c23b61661deba8a82cef0a28998e368758e88f63e8705
27646672ab5c753c8bc94f809e974cc91742a149400362aaff4d5d04b5f44fc28da9ce53eb168020
5c3db1f4354b20a0fcab42def8d641053c0877423b0fa1cc478c3931364f3c83fdd88172c7316012
831ad3a2f952f6ec4ca99583a313e8e4985489fec19d3fd003fdbc285c06e444f48a8f3eebae5b15
c9429519e060ffcdedc842a5c474d10ecb0eed82a0b5e1679dc351de066bea882273403ed018348d
3ef76a835f3a95929fe2883463783e3dab833df3b5121a87b5e93154fbfca1dcb60a5d460083bec0
5facee6803a757edfb62db0a0a728fc18849f8f10f6124e4d5fa1992bd07c8a17fa52a34136a45a9
151ce237d04d54d142ddb7973379263c40a27c705494a84b1753173170d3458fc1ac67f83abb706f
1e7b0ffb31ae95af5be2b119d9d9dd288e8b5839533efc5d3b2ffc8652cb541f04b294c44b60d641
960192e68107029e8a48f65a9d1aee572f9ae81c40bf7cab746f05d939589f9c8a0b6c8c734bc292
8c9cfc2d519f55d41a2df89ddde8c559ea2b5d37aa873388ab68b157678e13a3f7416211e38459e6
0e222446e9ff5144ff564f1a0ea35b86bb11a27d4e3bb1ffe9bb8e7fa1c2d599d9f10c35bdcd2ddd
8f14275670fd35a0742442f357b4e1bbe910aefe5805bec4af07b22a0a191d4ea8c0f62d0d5ea58d
10c0a72ed1096822070c52e93c27ae70da41cf969bd5470566e12664ac38b05a8494483bd9297fae
b6379d2ed17d3b73e44a4a9e0bba1aba1d4818f11299481bc0dd4d1a07999fc999a148bae215aa6a
2d2d8c93b33d0d413da53c4451f8a515e57de6c5b125eb816f399857e3a19638a4b3b3d2487e9e26
4df8ee59c431c70fa23b35e20b62e4d79a9b41d731d10a78a655dd2b82bae57549d433d274b08075
c5f3ddc85db02e8db7b398bc2f48f94065e9753e3259052ef251f8977ffd5b6056e0afa59187cda4
de03ce47a82440af151599695d3dd842086563d80f581b7b9b59bf0a2b44e81b91050362dd8a2bd6
2375c781f37cd1332a06f19a180f59258a7d91d76b1ad02774e3b277e248a25e33fa0095d7a1eed4
0fa83c17f6768cd83be8b73696c45cb5f7c3525c1e68941ac32618247219d736618dd5bcabd434ce
de7bea00f998c0e3597a222180ab72a666d6c3cb317eac0e6c0ec20262945dbc466144139a4b6fbf
19bec8fe8b5068311fde11baa39772499b17f6887b98a005b0aadabc28477df8dab657b5f0d3f80a
3bcf98ef17d1e594dbb3a376e75c2a081bd01426bbccf2ba44afb010d410a52f158aae84d4914c75
1428cec6e11165914147818f332466f455e02115a2f05facb3bde0665a3ad1b169a350cb787f405a
2349af005e41b99c2257e1f18a2216ea573bdc1f115787d6d3ecabba4eb220f8b556b25a0de64a57
299ab843a79d14f322688de3123ea9d6b2c90225553af81465c9db4cfe493da9e3c0cae8b7c5ed57
3de24896893a42c2442fdacf2971a8f766cd42578b6c1f43828c8f084e059edf2d7812d25c6672cf
e0978a5258f761dc1ae432ab14d4118dd84bf669ccb92cd5629dda353a66485d4b78b5a826d38102
c2a26a9bad7d3265f852c4ec05afa2f8c48b160591b3249a9eed17c853e86b6f41c7618c8f8d9941
a1c4cbc38f8402666f2241af9805620bf8f1ecf4a7518c51fcbe2e8bd8be08a032984d8e7e7996a5
8613e6587b60dc61e6f6a895a80476dc65366b144a513579067c7cdfafc6c63193a7eb6b871a39d1
4fa692cc5d65f47e7bcec15bbf01be32e43ef5455807ab5d17638b63bc77fd9dc7085e2cdf2ede09
7e59d1eec05eba786e5719410c5111d8b1e871e22de7e8ba5f711c609a989ef8c1ebecaac95c9c50
667065d95932acb707f12977c68f25c7292edc6dd36bf4cc7c284010553c1d74cbd8f49213196533
8e29e9fdcb9df098f69030c5b6033f7beca287fed1e49af7cb491f85bed25a8b2bb5b05ffe65e810
3ce96b7792f28260d70163649c4fa4555a773c0ee264b1688e990dd2b5bd9ca8a32f2f325a4d250d
92ff3aaf2f7575f7d2ec0454b1a0ae5f75320c472eb0aa3efeeda0380cb8f87f065fa2a84dece0e9
971c8427308bf138d3c7a2fd4be77b03932fa43a1419141ec15863c7fd4ddb101831ea8f4b39dd1f
e994a98c30c3299de8a15f0849b48ce4a5011d6026d9092611647bdbe611642d47f14601a7116fa4
d5d765b3d116f512b647486540d257a18bbf91156ae3a24894a0c6c9e3a49a2d05483d03ad307640
6829f6e43088675beb7d36366be922f490508a1aff8cb0d8d975334c72dc4103b5372ad0eea22b7a
a43ec9535be550032892d1977e0dad6a5bc36d2b5c62cc91d8dad56121a6e069d4dc3998949f6166
574ee016bcf96148da29cbe3def736c185cd55d4c9330d69e05b2353427eb5968dbdbb6b9b77b9c4
f9dc40b3c97d08413f68b1d644b7ed45aeb622e21152d04d50aa948ad3865917931d3a603c5a3a30
2ff7a071bad788de7573c4aedd1c4b7d95d40b1951a8643b21d97c7528a8c5f97b31eba3cb439232
a8ed7acba0cc531ecb8fc6e1036988290767a255e1645ce51e3e73690408caa7de4f8a74152bc91a
8e5ce6fb993b7bcd67b19fd6e069f4d0639fd3d63fac825db527d46a936f1154021b7cb2bb775e53
304ebf1d920c005d1d36af100310a6dff08fc92a943c9705a51226da8951f286c6c3348275a12132
29bca3ff5ec2c0c8818391d53258d8edaf13a553dcaf3cf71555b173558464a76a5b4eba38c10991
5e64636e9dc7f1da0b759ab8072625c68da1d2508e0cbbe005d64614b17a9ba9cd45391431ba998f
d879ea67b549c0ce78074c3efca2d88899e52ed50722b581c8762011b18acc71b1a1b3c3c060c529
d4287adf14493b1ced39b62a83a0265e012b14c565008915f090e321413b6b7a2ea444ef254c2b2b
1f08f061b06e2dd2f89d1e7a8e62f2516110d566e02d3fb08816578c80b39f5048286415053732d3
1d03f46d5e4f9b155cf3ae9c0547ff2d2d9b92549bc586d345ee5e8ccb5a33abfa21e2afcfb8c253
112c8f065cb1125a583df2ca189f163b71635fcbfd8f498fbbc039db9eca9c759268ff537b38e7bf
8574356d0c34b6ca00d29932e92b685e20ffe716880552eb7e2607c691bb2b2a954cd41655a30694
8a7e220724530fc134bdb5cc6956145a6668bc9cbb754af485978c5a3ab226fca1f7fc1dba2bb853
79f7ba45df3da1a95871754a893371ee8bb3a53ead466c3ac6c2c84af102e121a9aeac963088745f
15743f40ee3da0fd0daa42cfbb6c6d79750290b1b18f1b0c539e03f91dc597343e7d94a3c44f2d6a
a05c683df29881719ac31681690cb4797f555d7c53d22dc4366ae2d741dbd859c161043546590cc1
70b5660bea03d0b84eaadc5a59d854f491a041918afd9e16e69edbacf13757c7529d48382d6e36de
0bfa81a1df3f0c8e44edee1dd4cd4f06ecbf562757a17dc7e0932a37b7f0b01a5720711c66715dcb
3e49db485bebe878d4a4f42810650b50838062ea7cb51ed7ca36d0325d21476bcdb33f470eefe08f
5bb1a0e799deae8ca40a485c8057415ba3e62c2dbecfa4153c050e40509416ed2947b9afd497a4ae
5ebce8a940311bee3a93b49242a296eb450d50bdb1149753674b0d789721aaf5ff4d227b3e4a2c2d
74cf47c1c30271f8ccc056cae3bd62462b19fc24a575c64ca4c359862b0ef40e183a4ccdb993814b
3ae3267a60235f55a8f65136de1b86ac2d1bd3b748c3aaa6eef5e939cae879e608d10019da549579
f380af2efa17c83137a65b26676d18154be66a48e199a45f9a4a7966ab15252d365c8d689b91dfaa
b30823495904a4cafffec50fa755c6fd89563e70b931d00f53bb6f016dad099bba8cfa3e93261a5d
5fe895c68fea030c6a3dd95baf197c7640504e41ce2a3a01ffbb08c302b8ff88d15a5f492632f654
9d92de24e1bc32fa6ca1f17f5d23d91ca2ef07783f21892142bdc0ff196755b74ed81ce3a256fab0
922c9028ce33ec2de40a7bbe856bc3c9e1aab682a2447203bb4550e8f1bd78280f0fca6e8e6257cd
3aba898df02e91a052514ddf2827ee06200c28de3c6eb606d85738ccd4eef675270ad91d9f2938df
251c4bc5ae1ce839c824959ba59bf1e6d6981aa1affea8389f3cc901189c8aa861808a6c7947ea45
6e56d106b3991e9f70b6c9c8c56bec7b9564b2734423779a0dc73ab6e22de95ddde1f983cc1a39c9
3847ba341b7dc6a1824eac13a4ef736df791d9309984c01c220bbd8ca597939d77d68199075edc21
025450ae433a2d1c36fd1b87473599fbd11c72ed4ddf6dd26e94d6ccc5a12df13a64342b7e1350a4
1cbb38d52daf3e0f9923a34a70095e4817f78a4a95c1d59af8b5d9f8042ab8009200b7082b0babcc
a99f037d109ff4c2f70c2ad93769055d72c8882410fbecb9a55857aac5fbc0e73a6bb48c74be8442
af91c59f1f5265e837b74ea3d30bfd56a1b45339103e8ba4df72dedadca0367a600b97f8c6062238
4a15c86634f8643daa7ad72a97c155442456bb602d68f1a2fd7cacffb56e362a1c5eec2c3f7706b5
5119b1ad24ceb93a64693bcf62c86091339d565371b0bf9a30580fbaa6c3c14d30631d37fb34378e
b572c27a11376b47633294405977fa6a1e6939af3a0a91be2f1a770f45d367a92b9208cc50e9459e
c548d11d7228f6540118c8e24d592a38723a8c7f1f7c1457e167d47b418410a8a9d5135c5c3ad4f0
d732963d7bea2a2b2502edfdaaebf138f47ca6f60f159ea6243d5c4887fd1c530b4f811d6c87bf96
23501b4680b223fcccbe4381d856c347ce7e19db938ac6d89e7ac2c6e85c9e053577233435ba5390
5834d59ca76a74494132ff9e6884821873203470699e7325d22a4071fa754252b079bec4c9ba9d43
f11678782eeaab99fbed277d0ea21f40c535b8f8123ea66dae8958415652bda2912512f7edc459b7
a7c86f92d397ecace796e42c97beb016ec5b14f40194c6ec3454a71e39b0368d2975ff24c2dd56b6
67f82cd3ea8170277b11a12c3519e014ace0614a10883086305ab1e7856565ee7eb87706d42fc8b9
c732e1febd6b41022deb67302460ae32c3dc0dc0f71c30357c06fcbccdaf42a23b3c7df12fa74cc3
9388939ecaddf9f8ff4888fc9f7ab8927f9f91fef0b0911f5e137c6d4fc613a80ea19bfe42745ae7
2449b3102a6e391a89ee1fd80805c26d4c0fb93cad8781d34da09cf81edfa144172d5442a242701c
60d2b76e0076abcdacace9abf9a7715e3239bd041b507b206b670eb3cfc0a820d13fee0598e16569
1ecb27f0591ddaec09e17df2cef0ec4cafa7131644cd32c535e4cc8b7d7182aee12e27e8924b6f7f
7f29b9961dde185cade0c0e956e87076ad91edd3ea33cbaddb8c5fd202b3681e461ea4495c0059bb
3bb28f8f8ff0128af5f6d23c74d147b9853d7eb4bc7f9a08122c38be8e9603df1bcdfd274719a680
59e75855e1e6f2c2add00f676224d816a9a87293c3262c05b490e861fc4b71acb478bc5be35e54e9
9ede24d226fa06c6c667ac2e7a3bc8c152d703aa819f4d260c5411e1cc31d5bed30e7ad4c18afb79
22881c44854f22cd3a8e3d9eb80e2dea8d38216f2df346569b5d515b65534adbca26f0fe5bc95c6e
85a88e47148e743f20b9aa1a7deafe429b5d2694a432dcd5dadd20f5d6b7742a2d2d0d3c1a6087a9
9106651ffc2c854f5b840c033d310a26450f70cd4d487ebb25f1b7ed8142f01b81821410c72eda08
2ed39017a904493848c0ab061669fb8878c165df280ec3d2e924fef29c5cf077de0b604ac240087d
e4af9f89051a0595ca59f29a654d47c8bf7669e06804d8d467aef56b6ee89b618c4c2886035618d0
d43f047bdcb6985e1ea2a42b6d29ee3e76e3ecccf2710994a602ca2cb33b068709342cfd4b77eab9
00a6b4268a50cd70b78e7cf5400df78300bf46b73b93ee7861e4935159016ea703805eff0128f7c7
e943ea3d402ce5d2eaa5924834e2b253e6002a99983b4ab199f7b84e37468f64b0f0627321f62857
14083a11ec9e630a2b8178690bdf20e703c75566d1ec5a5debe2cc217d00add65e2219e08e2c1204
59e5061f0481ba5fbda187196bf4e8e4e09f1a26a095d2b45f9eef561cbe68c0f7399f10632c4dd0
47b94d767cd6e38738955a47a611f7a0ef0af791c2446691f061ae883b7eed5eef72ae1e22d75a1a
11b2e78f05d8e09288512e89aeefcf126ed09b541fb971589f80ec2494060d2cbdb2bbfb569135e9
1772954b93d86085f7a22ae03d00805cd03c9d5830e297fcd48f705514846b376c3e1834a3cbde15
99d054233ac7b96d0ee6ba919b0b0338d3aaac28091e28a468b5f99962ae5737bfb005ededc42cb7
ec83bf5768b200b550486ad43c3f75cc9d88cb8bf5088294c96008f6a3724dffe87834d72ded2bee
e2163a55773070453a3648dd163fc74757f4a1649c1bf4496d280b3457238d4f3c739de91751adb1
b8ea46be5721d01d4486582e9850cd64635f30d5318aa6fca530bb969d10f9b3db0c4d896f6d7cca
ac3f468d5d0489601c57a563a30d3a1f887c0d6ecb04f9def777d676601ee41bd9c166a9641e7c25
69d769e98708cf0de4638e2e2bd92bd81c9d5b93db3161db464029bd69a08de15d9aa1dfd9de2ea9
2802def6ece1cd5b0c64f4b3b928cf1a471dff9cc2b7a6b52c2882a766b1ff66f869cacbbe63d3cf
5308897b7686e6dee0d6f1f6cfba220c3e08ceb994ab6445a18d92fbc05f0ecdd0d028f37c586422
78a9c3fda26ed17b26acb686cc68744ef9a1538f6da7063e6ae326f390b1b25aad0afc8ecf143f7b
f26dc3f81523612020b90fc20925b3803258475db37b639b88d232e798762c6170fe3fac7680e4ec
caf8bbc9ea8375c714fd1ed194da4f42c6b024b7e429a9f76f48511f2fd6860c17197176b284714a
e3e50ecd8253427690b0ba554e82434448b82cdb5764d954d61e4d149d141ef30b221146d30f1c6f
879b242f0c5fa5eb43137efc730d60c9b0c4aa4247c87f50740899c97b0b2842dd3c231a17b6bd69
11f52339dd9e5fce34016481a939c5f02c42cee0507b899bd079177cac0ccbe3231e19a0269f8cee
611d6950d25114f2382d4b083da666fc940d8c59805f59db36e59ebeb8397b13303c9bb4d49bc72e
58123e732601a59e83e3a8c00d138b8a52311744419a5e2137b25d1d5201df8616012be1010c8115
c64334fc9f4dd875ccc373b2cdf55a7d241af2307098e095d9736f968ef30e7228996129e5c3b356
4b4737b315917ef28de80fba0754df2ede36f3ff190ef54dd5810d550512b46cd073c1d3aa42b25a
c331b3438ee5d461368466995681008adb7855cb996aff7864df2e66a19ca9298ca7e6f47dae4595
976d5dc7f8b42e83a1cfadfdc6b7540f5a2a43631605d360cbe627a5b9e7b1972cd36a80698c33c9
6c27fa612ab6182ddce395071a1a23b789210f02c27ce3f391d4ac96cdaa1b03d3c45c1185b5c01a
6279a5e23e16148a6fafdcfda958576c0401e66183275c08940c3d99d96436ccdf8610931f1991e2
291fd51048985f9810c34542a35cc609890c6edeaf885a06739486ddadebe8928e888f213d50ad7d
19b89cf335cdd15b96a5b43e8d8943b12974de2a02e4c3bd38b3669d60a8fa67b6d8553af8cfff3b
911c5b76d6593dddbb32d21da9b507cd238a1483e218fb370eca18a19c850c8973a6eb498a9ca0fc
5f7bd63415d003cd1e876c2abcd961cbc6e45ea99d554ad5ca1b4378ec6bbf3ef5562d8e19143484
9c54a6771695a63d0ce258526a9638967a77ba860ee8de8202ebf93c3b48e06d6ca46c7aed7199aa
93270a294f79b0760898cc47b91873c4a6e5f6bdd928ac9d25329d5416cdb6f1734611ece6703fb7
7775eb63972e4e1d1076a06343e6dd3c857bfaf2a774bc8450e0460d7d76eec46f9dfd4983eb65cd
7dfb7dd300fb144134af662dab3de15da42871e7c6d6a98e7ee55bce793451a0123681bae8670f91
451b0f431becef2101fec6a73e75c0348ddfe013ff6851973e4d522ce110a8fd2dda4ac5185ba3ee
0144e533a9aba8701dcd5cf888f496997932335401e57b189aecf4dc2d10161d58ab067fa19d6332
5abe34b7626ea45eb9eda24853127c27f4e59cb6c0e10e7a5914595a4ac3e8ad6dd9a85ccbf23fbc
b9c0ae576e1509afcf1a7530834e1cba04e613246bd73800fc4b14e248a6094a5cbdd0464f3303dd
c827ae23c6f34fb17e5cc1911eebee0a1f3854b1994722ca7b9932ff5d08461c99176bd1e956dc68
3003a91a3ff0db184df3108ba3f555725433645c4fe4faf3c6e6d17467accefe553ee62bbcb8f4a0
48a46c135a1e4ad8a35e9f882bc7d1fabfdf20b84285bc6f78f4ca095712f9d6211c5a325731f95b
d4f87fda45b3265189cbb2ef2992d73690c08ab59b8c927b5966c2d3a2eab23eb8643c9375fd61c2
a14b624e40befebc8c7620a4def3cad8e864615fc9fd1da8bfd85e123f0209b8fedef38f88ec6f31
8429fc6662778a437330e15128afb80997a0f29a493d327d9ebb4b74bcb13a3b235f9314696996fb
c00eb966dee6ebd157e4ade95f34eee18db5fb932e7f29a8fcdea5482370b97f04bf45921dd74c9d
efdc767ed1d587d450ad5b42352dc222f3b95e99f406a61383b1530a890c6a6145d092c42272b855
8565a42211e28f85df518329b19c88f5481551069ec1224de621d4871da188a56849087c8c5eaedd
51b466b102a26ab2fb2361551fc10f60ef4ae55aafac27c9640594776bde50c4077cafe89c18202b
591636c4f37745ddd41178849414399174edea1c154da88f3ccde1b471f77a71d211d2bb87eb46ea
149e7d6fc7d05a5e2c7678846588af6cfc0ef49925bfacfadba502e66c072f79fb0f421c17682212
334b68994ecb27dd6c932d87b0624aa45b472bbcae1e04195ed9f1ebe6d0a22ecbf93462d83c5fab
cd517aa903459617154fae72e7ecef097f459091d8263e9cbaf4a62e020421a78c8d3a13e798f573
44c704bfe2675688c3a35e70b77cc32e6e69f4b6c7bcb16934d1671612e75f15d98d063fad915283
7779f5ce8146244a675eed0e0458005f79cf08419e9e153ea6f273ac8b4ea06f3b8f28e606a11d11
d3f069d88a4f01b36765bd5e65a1d09abe3667f60b8f414e15aad69fdc606c88c522fb6c85df8d55
46d56a36c4f95bcb28eb470402a834f2f4b5a110fa75209bfcdacd45bd8af70c9d4169d1ecbaf023
e5ea19ccb8c3212cd54dd5b62d46465d83928b6704f6a12e11818c87aaa394983d5928b78557c825
a849d034e1a29d07575de7a7534ebded0891e85f0eea317293fbfeab7319e79ebd109b237de738cd
461819d174b199c6fcea4a0439e58f93eadd04fd29efa130a98eef801caeee3940bf83356731b0a0
12f1e16a2d8932b13cdcc448397414399c092e167fe55442bf45285ff89015057df662e398f6419c
6aad513a90873f5b3d9a0f880f9599f4ca302b6b58c60eac0136acb1059fa97b85cdab7406f1b002
72ba27c934b253ba132246b39d47d61a967d7c869489e6bb72b87cc1b3dfbb2a2e46efb6f9a8c6d4
38dfce8c44e0948c4e06b31aa104d0ddbc62804899367aa2f3aebb97c142bfbae71283c172786281
cc8fea6a6c7d24f2be65bb8d0099b2de592e5a2d4faea9c680d93ec8c1a43f52ad79bb708beabe8d
8537baeb1667e2a684fb2495a1edba071a65ccf3ea93918e0a5fe2e5ef8a190c41ceef819758d6af
4c297867356717e61708054a0994be43e1124d6a07231a694ec9ee70270fe03d18561610fb49939d
315e429f697c698eda9ff5cfa6704cb1a902224e5e0214144c4096ae8140ab65fee0f4a458cc1d74
ed346ec330f328437d652d2b21c708c62d73ae67136f6e2f2241947e850611189687e3b5a80c9658
54c3e11036e3c76e0cc74517584a004ec2b9f51c9aed438e46bde24c697d653590399cd7584e3f07
1b4cc7ad1630bf499d295f752fa6242fd4b9421faf72ee7ca0b455beb5c2f422e60de59b4dd835e7
4a56647836a40dea387ef2484717e0df36dacc4159364c9f126702eab93c4eb5f4b740aa6af523a5
fd2c4a8c0241af3b81540085c9060e2d47afdfe183f441c3650db436f4792d6fc436837cde6f6879
785c7a934bbcaec7f7c5c268b9e82bf1658771e2695dadbcd772a246d8c1f24e4ce68fc72ccc9d9f
e7e6afe41efc17b680748fecf357a4b13d5ab516204af1c72dc7b171929a33ef4a64b04c59808cf2
242c82033b8704769bc397930f948f861c3f7a14664053d25dbf3ab7ac026efbd63196b46d52243c
cfd930a19d83cf4cd64a0efdf3299ab93a54e356a4832dfab2bd48896ce9f6c6c84c305aba308489
e4281eb9b250210d7db2c782a54e59b35779cd26bedee2492aae7af8de98bce7e078045fe157b2cb
6725a08cda659bd5a309f086f17d60e235c42bf36dd0c4759e77474d573c1e1593af18c90f20099c
5ade242cbbf7a2b7785c2864fab83a3e72c533cc2b9b7b153c0fdb84d7fae784278a7381a732cc9d
8ae17314755da248fd5cafbe2cacfe57e89f343fdb255354171c5be775031bf7424fc4d9f6170747
3727d9ffbc99811b55ef86452f08e234b2341b3051005c3a12d08ae74d7b12be4cabd39be00654ff
b3fcf861062edfd80a98e08b6fc0b7999895b39531e8951893b22e0b8fb7d4f03678e1148b577db2
150005075d8dfafd47d1be51c571794353ac16d59a39a9f3077d9708900a3b6bb395c92e7cd194b3
a0e62f996f00af862ce274c93b093286fbcc2ff9497d45430bef018d67756d3c8b7b752b8b6ce526
76bf5de249a1515f57a6033483a8afe681c9c2ceff4365d29ba34ac7d19e3aa9240334f73f44d683
86e7836b487b94db102664e8a85a4068fe
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 SSC_Copy_State <Virtual>  0
 HBW_Copy_State <Virtual>  0
 All_Copy_States <Virtual>  0
 HBW_Manual <Virtual>  0
 MPO_Manual <Virtual>  0
 SLD_Manual <Virtual>  0
 SSC_Manual <Virtual>  0
 VGR_Manual <Virtual>  0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"This is suspect -%3E<br> <br>"
"Need to check if its really x57-59  or 28-31"
#END

STR ST1
COPY 0x1 "4 0x0 Y22 MI200 1 0x0 Y23 MI201 1 0x0 Y24 MI202 1 0x0 Y25 MI203 1 0x0 Y26 MI204 1 0x0 Y27 MI205 1 0x0 Y28 MI206 1 0x0 Y29 MI207 1 0x0 Y88 MI208 1 0x0 Y89 MI209 1 0x0 Y90 MI210 1 0x0 X25 MI211 1 0x0 X26 MI212 1 0x0 X27 MI213 1 0x0 X56 MI214 1 0x0 X57 MI215 1 0x0 X58 MI216 1 0x0 X59 MI217 1 0x0 X60 MI218 1 0x0 X61 MI219 1"

// Rung VGR_Copy_State#2
// Offset 45
STR C2001
DUPBOOL
AND ST1
COPY 0x1 "4 0x0 MC200 C400 8"
POPBOOL
DUPBOOL
AND X26
COPY 0x1 "4 0x0 0 MC203 1"
POPBOOL
DUPBOOL
AND X25
COPY 0x1 "4 0x0 0 MC200 1"
POPBOOL
AND X27
COPY 0x1 "4 0x0 0 MC204 1"

// Rung VGR_Copy_State#3
// Offset 78
STR C2000
COPY 0x1 "4 0x0 0 MC200 8"

// Rung VGR_Copy_State#4
// Offset 85
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
#BEGIN FMT_COMMENT 
"Enable the vaccum and turn on the valve to hold suction "
"when we are inisde and in the oven reset stage of MPO "
"Program."
#END

STR MPO_Program.S1
ANDN X18
STR MPO_Program.S4
ANDN X17
ORSTR
STR MPO_Program.S10
ANDN X18
ORSTR
OR MPO_Program.S8
OR MPO_Program.S13
OR MPO_Program.S9
AND C2000
OUT Y17

// Rung MPO_Suction#2
// Offset 13
NOP

// Rung MPO_Suction#3
// Offset 14
STR MPO_Program.S1
ANDN X18
STR MPO_Program.S4
ANDN X17
ORSTR
STR MPO_Program.S10
ANDN X18
ORSTR
AND C2000
AND Y17
OUT Y20

// Rung MPO_Suction#4
// Offset 25
NOP

// Rung MPO_Suction#5
// Offset 26
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 Y45 MI400 1 0x0 Y46 MI401 1 0x0 Y47 MI402 1 0x0 Y43 MI403 1 0x0 Y44 MI404 1 0x0 Y52 MI405 1 0x0 Y53 MI406 1 0x0 Y15 MI407 1 0x0 Y16 MI408 1 0x0 Y17 MI409 1 0x0 Y18 MI410 1 0x0 Y19 MI411 1 0x0 Y20 MI412 1 0x0 Y21 MI413 1 0x0 Y13 MI414 1 0x0 Y91 MI415 1 0x0 X12 MI416 1 0x0 X13 MI417 1 0x0 X14 MI418 1 0x0 X15 MI419 1 0x0 X16 MI420 1 0x0 X17 MI421 1 0x0 X18 MI422 1 0x0 X19 MI423 1 0x0 X24 MI424 1"

// Rung MPO_Copy_State#2
// Offset 55
STR C2001
DUPBOOL
AND ST1
COPY 0x1 "4 0x0 MC400 C800 14"
POPBOOL
DUPBOOL
AND X16
COPY 0x1 "4 0x0 0 MC407 1"
POPBOOL
DUPBOOL
AND X19
COPY 0x1 "4 0x0 0 MC406 1"
POPBOOL
DUPBOOL
AND X13
COPY 0x1 "4 0x0 0 MC400 1"
POPBOOL
DUPBOOL
AND X12
COPY 0x1 "4 0x0 0 MC401 1"
POPBOOL
DUPBOOL
STR X17
ORN Y20
ANDSTR
COPY 0x1 "4 0x0 0 MC404 1"
POPBOOL
STR X18
ORN Y20
ANDSTR
COPY 0x1 "4 0x0 0 MC405 1"

// Rung MPO_Copy_State#3
// Offset 116
STR C2000
COPY 0x1 "4 0x0 0 MC400 14 0x0 0 C800 14"

// Rung MPO_Copy_State#4
// Offset 125
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 Y30 MI800 1 0x0 Y31 MI801 1 0x0 Y32 MI802 1 0x0 Y33 MI803 1 0x0 Y34 MI804 1 0x0 X34 MI805 1 0x0 X35 MI806 1 0x0 X36 MI807 1 0x0 V1600 MHR1600 1 0x0 X37 MI809 1 0x0 X38 MI810 1 0x0 X39 MI811 1"

// Rung SLD_Copy_State#2
// Offset 29
STR ST1
SUBSCRIB "4 WX0 V1600 1 0x4"

// Rung SLD_Copy_State#3
// Offset 34
STR C2001
COPY 0x1 "4 0x0 MC800 C1600 5"

// Rung SLD_Copy_State#4
// Offset 42
STR C2000
COPY 0x1 "4 0x0 0 MC800 5"

// Rung SLD_Copy_State#5
// Offset 49
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
STR SLD_Program.S3
OUT Y31

// Rung SLD_Suction#2
// Offset 2
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block All_Copy_States
$LGCMOD All_Copy_States

// Rung All_Copy_States#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC1000 C2000 1"

// Rung All_Copy_States#2
// Offset 7
STR C2000
RST C2001

// Rung All_Copy_States#3
// Offset 9
STRN C2000
SET C2001

// Rung All_Copy_States#4
// Offset 11
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#5
// Offset 19
STR ST1
CALL MPO_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#6
// Offset 27
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#7
// Offset 35
STR ST1
CALL SSC_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#8
// Offset 43
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung All_Copy_States#9
// Offset 51
RET

// End of Code Block All_Copy_States
$LGCEND All_Copy_States

// Beginning of Code Block SSC_Copy_State
$LGCMOD SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 Y35 MI600 1 0x0 Y36 MI601 1 0x0 Y37 MI602 1 0x0 Y38 MI603 1 0x0 Y39 MI604 1 0x0 Y40 MI605 1 0x0 Y41 MI606 1 0x0 Y42 MI607 1 0x0 X40 MI610 1 0x0 X41 MI611 1 0x0 X42 MI612 1 0x0 X43 MI613 1 0x0 V1200 MHR1200 1 0x0 X44 MI615 1 0x0 X45 MI616 1 0x0 X46 MI617 1 0x0 X47 MI618 1"

// Rung SSC_Copy_State#2
// Offset 39
STR ST1
SUBSCRIB "4 WX1 V1200 1 0x4"

// Rung SSC_Copy_State#3
// Offset 44
STR C2001
DUPBOOL
AND ST1
COPY 0x1 "4 0x0 MC600 C1200 8"
POPBOOL
AND X40
COPY 0x1 "4 0x0 0 MC601 1"

// Rung SSC_Copy_State#4
// Offset 61
STR C2000
COPY 0x1 "4 0x0 0 MC600 8"

// Rung SSC_Copy_State#5
// Offset 68
RET

// End of Code Block SSC_Copy_State
$LGCEND SSC_Copy_State

// Beginning of Code Block HBW_Manual
$LGCMOD HBW_Manual

// Rung HBW_Manual#1
// Offset 0
STR ST1
DUPBOOL
STRN C2
AND C1
STRN C1
AND C2
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 500 60
POPBOOL
DUPBOOL
AND C1
OUT Y48
POPBOOL
AND C2
OUT Y49

// Rung HBW_Manual#2
// Offset 29
STR ST1
DUPBOOL
STRN C4
AND C3
STRN C3
AND C4
ANDN X0
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 500 60
POPBOOL
DUPBOOL
AND C3
OUT Y50
POPBOOL
AND C4
ANDN X0
OUT Y51

// Rung HBW_Manual#3
// Offset 60
STR ST1
DUPBOOL
STRN C6
AND C5
ANDN X3
STRN C5
AND C6
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 60
POPBOOL
DUPBOOL
AND C5
ANDN X3
OUT Y5
POPBOOL
AND C6
OUT Y4

// Rung HBW_Manual#4
// Offset 91
STR ST1
DUPBOOL
STRN C8
AND C7
ANDN X10
STRN C7
AND C8
ANDN X11
ORSTR
ANDSTR
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 500 60
POPBOOL
DUPBOOL
AND C7
ANDN X10
OUT Y6
POPBOOL
AND C8
ANDN X11
OUT Y7

// Rung HBW_Manual#5
// Offset 124
RET

// End of Code Block HBW_Manual
$LGCEND HBW_Manual

// Beginning of Code Block MPO_Manual
$LGCMOD MPO_Manual

// Rung MPO_Manual#1
// Offset 0
STR C800
ANDN X13
OUT Y45

// Rung MPO_Manual#2
// Offset 3
STR C801
ANDN X12
OUT Y46

// Rung MPO_Manual#3
// Offset 6
STR C802
OUT Y47

// Rung MPO_Manual#4
// Offset 8
STR C803
OUT Y43

// Rung MPO_Manual#5
// Offset 10
STR C804
AND Y20
ANDN X17
OUT Y44

// Rung MPO_Manual#6
// Offset 14
STR C805
AND Y20
ANDN X18
OUT Y52

// Rung MPO_Manual#7
// Offset 18
STR ST1
DUPBOOL
STRN C807
AND C806
ANDN X19
STRN C806
AND C807
ANDN X16
ORSTR
ANDSTR
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 60
POPBOOL
DUPBOOL
AND C806
ANDN X19
OUT Y53
POPBOOL
AND C807
ANDN X16
OUT Y15

// Rung MPO_Manual#8
// Offset 51
STR C808
OUT Y16

// Rung MPO_Manual#9
// Offset 53
STR C809
OUT Y17

// Rung MPO_Manual#10
// Offset 55
STR C810
OUT Y18

// Rung MPO_Manual#11
// Offset 57
STR C811
OUT Y19

// Rung MPO_Manual#12
// Offset 59
STR C812
OUT Y20

// Rung MPO_Manual#13
// Offset 61
STR C813
OUT Y21

// Rung MPO_Manual#14
// Offset 63
RET

// End of Code Block MPO_Manual
$LGCEND MPO_Manual

// Beginning of Code Block SLD_Manual
$LGCMOD SLD_Manual

// Rung SLD_Manual#1
// Offset 0
STR C1600
OUT Y30

// Rung SLD_Manual#2
// Offset 2
STR C1601
OUT Y31

// Rung SLD_Manual#3
// Offset 4
STR C1602
OUT Y32

// Rung SLD_Manual#4
// Offset 6
STR C1603
OUT Y33

// Rung SLD_Manual#5
// Offset 8
STR C1604
OUT Y34

// Rung SLD_Manual#6
// Offset 10
RET

// End of Code Block SLD_Manual
$LGCEND SLD_Manual

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"Sensor data, and Auto/Manual switch<br>"
#END

STR ST1
COPY 0x1 "4 0x0 Y48 MI1 1 0x0 Y49 MI2 1 0x0 Y50 MI3 1 0x0 Y51 MI4 1 0x0 Y4 MI5 1 0x0 Y5 MI6 1 0x0 Y6 MI7 1 0x0 Y7 MI8 1 0x0 Y80 MI9 1 0x0 Y81 MI10 1 0x0 Y82 MI11 1 0x0 Y83 MI12 1 0x0 X0 MI13 1 0x0 X1 MI14 1 0x0 X2 MI15 1 0x0 X3 MI16 1 0x0 X4 MI17 1 0x0 X5 MI18 1 0x0 X6 MI19 1 0x0 X7 MI20 1 0x0 X8 MI21 1 0x0 X9 MI22 1 0x0 X10 MI23 1 0x0 X11 MI24 1"

// Rung HBW_Copy_State#2
// Offset 53
#BEGIN FMT_COMMENT 
"Manual mode enabled. Coil data is copied from the switch "
"position on the HMI<br> <br>"
"Sends a 0 to the Modbus coil output to disable the switch "
"for reference switches"
#END

STR C2001
DUPBOOL
AND ST1
COPY 0x1 "4 0x0 MC1 C1 8"
POPBOOL
DUPBOOL
AND X0
COPY 0x1 "4 0x0 0 MC4 1"
POPBOOL
DUPBOOL
AND X3
COPY 0x1 "4 0x0 0 MC5 1"
POPBOOL
DUPBOOL
AND X10
COPY 0x1 "4 0x0 0 MC7 1"
POPBOOL
AND X11
COPY 0x1 "4 0x0 0 MC8 1"

// Rung HBW_Copy_State#3
// Offset 94
#BEGIN FMT_COMMENT 
"Auto mode enabled. This turns off all coils on the HMI."
#END

STR C2000
COPY 0x1 "4 0x0 0 MC1 8"

// Rung HBW_Copy_State#4
// Offset 101
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block SSC_Manual
$LGCMOD SSC_Manual

// Rung SSC_Manual#1
// Offset 0
STR C1200
OUT Y35

// Rung SSC_Manual#2
// Offset 2
STR C1201
ANDN X40
OUT Y36

// Rung SSC_Manual#3
// Offset 5
STR C1202
OUT Y37

// Rung SSC_Manual#4
// Offset 7
STR C1203
OUT Y38

// Rung SSC_Manual#5
// Offset 9
STR C1204
OUT Y39

// Rung SSC_Manual#6
// Offset 11
STR C1205
OUT Y40

// Rung SSC_Manual#7
// Offset 13
STR C1206
OUT Y41

// Rung SSC_Manual#8
// Offset 15
STR C1207
OUT Y42

// Rung SSC_Manual#9
// Offset 17
RET

// End of Code Block SSC_Manual
$LGCEND SSC_Manual

// Beginning of Code Block VGR_Manual
$LGCMOD VGR_Manual

// Rung VGR_Manual#1
// Offset 0
STR ST1
DUPBOOL
STRN C401
AND C400
ANDN X25
STRN C400
AND C401
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 500 60
POPBOOL
DUPBOOL
AND C400
ANDN X25
OUT Y22
POPBOOL
AND C401
OUT Y23

// Rung VGR_Manual#2
// Offset 31
STR ST1
DUPBOOL
STRN C403
AND C402
STRN C402
AND C403
ANDN X26
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 500 60
POPBOOL
DUPBOOL
AND C402
OUT Y25
POPBOOL
AND C403
ANDN X26
OUT Y24

// Rung VGR_Manual#3
// Offset 62
STR ST1
DUPBOOL
STRN C405
AND C404
ANDN X27
STRN C404
AND C405
ORSTR
ANDSTR
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 500 60
POPBOOL
DUPBOOL
AND C404
ANDN X27
OUT Y26
POPBOOL
AND C405
OUT Y27

// Rung VGR_Manual#4
// Offset 93
STR C406
OUT Y28

// Rung VGR_Manual#5
// Offset 95
STR C407
OUT Y29

// Rung VGR_Manual#6
// Offset 97
RET

// End of Code Block VGR_Manual
$LGCEND VGR_Manual

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Spring 2022 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 02/14/22"
#END

NOP

// Rung $Main#2
// Offset 1
#BEGIN FMT_COMMENT 
"Call all copy_states"
#END

STR ST1
CALL All_Copy_States 0x1 DST511 "3" "3"

// Rung $Main#3
// Offset 9
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR ST1
RUN HBW_Program

// Rung $Main#4
// Offset 12
STR ST1
AND C2001
CALL HBW_Manual 0x1 DST511 "3" "3"

// Rung $Main#5
// Offset 21
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR ST1
RUN VGR_Program

// Rung $Main#6
// Offset 24
STR ST1
AND C2001
CALL VGR_Manual 0x1 DST511 "3" "3"

// Rung $Main#7
// Offset 33
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR ST1
AND C2000
RUN MPO_Program

// Rung $Main#8
// Offset 37
STR ST1
STR C2001
ORPD C2000
ANDSTR
CALL MPO_Manual 0x1 DST511 "3" "3"

// Rung $Main#9
// Offset 49
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR ST1
AND C2000
RUN SSC_Program

// Rung $Main#10
// Offset 53
STR ST1
AND C2001
CALL SSC_Manual 0x1 DST511 "3" "3"

// Rung $Main#11
// Offset 62
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR ST1
AND C2000
RUN SLD_Program

// Rung $Main#12
// Offset 66
STR ST1
AND C2001
CALL SLD_Manual 0x1 DST511 "3" "3"

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"HBW Program"
#END

NOP

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

NOP

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

STR C2001
EXIT

// Rung MPO_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"Handle Suction for the reset oven Stage"
#END

STR ST1
STR C2000
ORPD C2001
ANDSTR
CALL MPO_Suction 0x1 DST511 "3" "3"

// Rung MPO_Program#3
// Offset 14
SG MPO_Program.S0

// Rung MPO_Program#4
// Offset 16
RST C900

// Rung MPO_Program#5
// Offset 17
STR ST1
AND C2000
ANDN MPO_Program.S1
ANDN MPO_Program.S2
ANDN MPO_Program.S3
SGDIVRG "1 MPO_Program.S1 MPO_Program.S2 MPO_Program.S3"
RST C900
RST C901
RST Y18

// Rung MPO_Program#6
// Offset 29
SG MPO_Program.S1

// Rung MPO_Program#7
// Offset 31
#BEGIN FMT_COMMENT 
"Open door and enable the ondelay timer for the feeder extension"
#END

STRN X18
ONDTMR T0 1000 Y52

// Rung MPO_Program#8
// Offset 35
STRN X24
JMP MPO_Program.S4

// Rung MPO_Program#9
// Offset 37
SG MPO_Program.S4

// Rung MPO_Program#10
// Offset 39
#BEGIN FMT_COMMENT 
"Open door and enable the ondelay timer for the feeder extension"
#END

STRN X17
ONDTMR T1 1000 Y44

// Rung MPO_Program#11
// Offset 43
STR X17
JMP MPO_Program.S7

// Rung MPO_Program#12
// Offset 45
SG MPO_Program.S7

// Rung MPO_Program#13
// Offset 47
TMRDOWN T2 10000
OUT Y16

// Rung MPO_Program#14
// Offset 50
STR T2.Done
JMP MPO_Program.S10

// Rung MPO_Program#15
// Offset 52
SG MPO_Program.S10

// Rung MPO_Program#16
// Offset 54
STRN X18
ONDTMR T5 1000 Y52

// Rung MPO_Program#17
// Offset 58
STR X18
AND MPO_Program.S11
TMRDOWN T3 1000

// Rung MPO_Program#18
// Offset 62
STR T3.Done
JMP MPO_Program.S1

// Rung MPO_Program#19
// Offset 64
SG MPO_Program.S2

// Rung MPO_Program#20
// Offset 66
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 60
OUT Y15

// Rung MPO_Program#21
// Offset 82
#BEGIN FMT_COMMENT 
"Move to the oven when the item is baking<br>"
#END

STR MPO_Program.S7
JMP MPO_Program.S5

// Rung MPO_Program#22
// Offset 84
SG MPO_Program.S5

// Rung MPO_Program#23
// Offset 86
STRN X19
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 60
OUT Y53

// Rung MPO_Program#24
// Offset 102
STRN MPO_Program.S7
AND X19
JMP MPO_Program.S8

// Rung MPO_Program#25
// Offset 105
SG MPO_Program.S8

// Rung MPO_Program#26
// Offset 107
STR X18
TMRDOWN T6 1000
OUT Y19

// Rung MPO_Program#27
// Offset 111
STR T6.Done
SET Y18
JMP MPO_Program.S11

// Rung MPO_Program#28
// Offset 114
SG MPO_Program.S11

// Rung MPO_Program#29
// Offset 116
STRN X16
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 500 60
OUT Y15

// Rung MPO_Program#30
// Offset 132
STR MPO_Program.S3
AND X16
JMP MPO_Program.S13

// Rung MPO_Program#31
// Offset 135
SG MPO_Program.S13

// Rung MPO_Program#32
// Offset 137
STR X16
OUT Y19
TMRDOWN T4 1000

// Rung MPO_Program#33
// Offset 141
STR T4.Done
RST Y18
TMRDOWN T10 250

// Rung MPO_Program#34
// Offset 145
STR T10.Done
JMP MPO_Program.S2

// Rung MPO_Program#35
// Offset 147
SG MPO_Program.S3

// Rung MPO_Program#36
// Offset 149
STRN X12
OUT Y46

// Rung MPO_Program#37
// Offset 151
STRND MPO_Program.S13
SET C900

// Rung MPO_Program#38
// Offset 154
STR C900
TMRDOWN T9 1000

// Rung MPO_Program#39
// Offset 157
STR T9.Done
JMP MPO_Program.S6
RST C900

// Rung MPO_Program#40
// Offset 160
SG MPO_Program.S6

// Rung MPO_Program#41
// Offset 162
STRN X15
OUT Y45

// Rung MPO_Program#42
// Offset 164
STR X15
TMRDOWN T7 5000
OUT Y43

// Rung MPO_Program#43
// Offset 168
STR T7.Done
JMP MPO_Program.S9

// Rung MPO_Program#44
// Offset 170
SG MPO_Program.S9

// Rung MPO_Program#45
// Offset 172
STRN X13
OUT Y45

// Rung MPO_Program#46
// Offset 174
STR X13
TMRDOWN T8 1000
OUT Y21

// Rung MPO_Program#47
// Offset 178
STR T8.Done
JMP MPO_Program.S12

// Rung MPO_Program#48
// Offset 180
SG MPO_Program.S12

// Rung MPO_Program#49
// Offset 182
OUT Y47

// Rung MPO_Program#50
// Offset 183
STRN X14
SET C901

// Rung MPO_Program#51
// Offset 185
STR C901
AND C1704
JMP MPO_Program.S3
RST C901

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"SLD Program<br> "
#END

STR C2001
EXIT

// Rung SLD_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"Handle Suction for the reset oven Stage"
#END

STR ST1
STR C2000
ORPD C2001
ANDSTR
CALL SLD_Suction 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 14
#BEGIN FMT_COMMENT 
" "
#END

NOP

// Rung SLD_Program#4
// Offset 15
SG SLD_Program.S0

// Rung SLD_Program#5
// Offset 17
STR C2000
ANDN SLD_Program.S4
JMP SLD_Program.S4
RST C1700
RST C1701
RST C1702
RST C1703
RST C1704
RST C1705
RST C1706
RST C1707
RST C1708
RST C1709

// Rung SLD_Program#6
// Offset 30
SG SLD_Program.S4

// Rung SLD_Program#7
// Offset 32
STR C901
JMP SLD_Program.S1

// Rung SLD_Program#8
// Offset 34
SG SLD_Program.S1

// Rung SLD_Program#9
// Offset 36
OUT Y30

// Rung SLD_Program#10
// Offset 37
STRN X35
SET C1703

// Rung SLD_Program#11
// Offset 39
STR C1703
ANDPD X35
SET C1704

// Rung SLD_Program#12
// Offset 43
STR C1704
TMR T11 1500

// Rung SLD_Program#13
// Offset 46
STR T11.Done
JMP SLD_Program.S2
RST C1703
RST C1704

// Rung SLD_Program#14
// Offset 50
SG SLD_Program.S2

// Rung SLD_Program#15
// Offset 52
TMRDOWN T12 250

// Rung SLD_Program#16
// Offset 54
STR T12.Done
ANDGE V1600 19000
ANDLE V1600 20000
SET C1700
SET C1707

// Rung SLD_Program#17
// Offset 65
STR T12.Done
ANDGE V1600 7000
ANDLE V1600 9000
SET C1701
SET C1708

// Rung SLD_Program#18
// Offset 76
STR T12.Done
ANDGE V1600 22000
ANDLE V1600 24000
SET C1702
SET C1709

// Rung SLD_Program#19
// Offset 87
STR C1707
OR C1708
OR C1709
JMP SLD_Program.S3

// Rung SLD_Program#20
// Offset 91
SG SLD_Program.S3

// Rung SLD_Program#21
// Offset 93
STRN Y34
ANDN Y33
ANDN Y32
OUT Y30

// Rung SLD_Program#22
// Offset 97
STRN X36
SET C1705

// Rung SLD_Program#23
// Offset 99
STR C1705
ANDPD X36
SET C1706

// Rung SLD_Program#24
// Offset 103
STR C1706
AND C1708
OUT Y32

// Rung SLD_Program#25
// Offset 106
STR C1706
AND C1707
TMRDOWN T16 1000

// Rung SLD_Program#26
// Offset 110
STR T16.Done
OUT Y33

// Rung SLD_Program#27
// Offset 112
STR C1706
AND C1709
TMRDOWN T17 2000

// Rung SLD_Program#28
// Offset 116
STR T17.Done
OUT Y34

// Rung SLD_Program#29
// Offset 118
STR Y32
OR Y33
OR Y34
TMRDOWN T13 2000

// Rung SLD_Program#30
// Offset 123
STR T13.Done
JMP SLD_Program.S4
RST C1705
RST C1706
RST C1707
RST C1708
RST C1709

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

NOP

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
"C900","Vacuum_Unloaded","","Set to on when the vacuum leaves the unload state. Reset once we jump from the turn table Idle state"
"C901","Entered_End_Belt","",""
"C1700","Color_Red","",""
"C1701","Color_White","",""
"C1702","Color_Blue","",""
"C1703","Entered_Inlet","",""
"C1704","Exit_Inlet","",""
"C1705","Color_Outlet_Ent","",""
"C1706","Color_Outlet_Exi","",""
"C1707","Local_Color_Red","",""
"C1708","Local_Color_Whit","",""
"C1709","Local_Color_Blue","",""
"C2000","Auto_Mode","","Automatic Mode Enabled"
"C2001","Manual_Mode","","Manual Mode Enabled"
"MPO_Program.S0","Init_MPO","",""
"MPO_Program.S1","Oven_Reset","",""
"MPO_Program.S2","Vacuum_Reset","",""
"MPO_Program.S3","TurnTable_Reset","",""
"MPO_Program.S4","Oven_Load","",""
"MPO_Program.S5","Vacuum_Move_Oven","",""
"MPO_Program.S6","TurnTable_Saw","",""
"MPO_Program.S7","Oven_Bake","",""
"MPO_Program.S8","Vacuum_Load","",""
"MPO_Program.S9","TurnTable_Unload","",""
"MPO_Program.S10","Oven_Unload","",""
"MPO_Program.S11","Vacuum_Move_Turn","",""
"MPO_Program.S12","TurnTable_Belt","",""
"MPO_Program.S13","Vacuum_Unload","",""
"SLD_Program.S0","Init_Sorter","",""
"SLD_Program.S1","Sorter_Belt","",""
"SLD_Program.S2","Sorter_Color","",""
"SLD_Program.S3","Sorter_Push","",""
"SLD_Program.S4","Sorter_Reset","",""
#END

